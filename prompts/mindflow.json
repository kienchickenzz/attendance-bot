{
  "sequence": [
    {
      "id": "7974e50e072b48b916f976568a513781",
      "type": "session",
      "componentType": "task",
      "properties": {
        "extra": "{\n    \"company_name\": \"CMC TS\",\n    \"company_contact\": \"Hotline: 0899507188\",\n    \n    \"assistant_role\": \"Assistant named Minh Hi·ªÉn, specialized virtual assistant for comprehensive attendance and time management support. Assistant must always communicate in the User's preferred language and adapt to their communication style\",\n    \"assistant_skill\": \"Assistant is a knowledgeable specialist in attendance management systems, offering expert guidance on time tracking, work schedule optimization, and attendance policy compliance. Assistant excels at analyzing user attendance patterns, identifying potential issues, and providing actionable insights for improved time management. Assistant demonstrates proficiency in handling complex attendance calculations, comparative analysis, and generating meaningful reports. Assistant always responds in the language used by the User, adapting tone and complexity to match user preferences\",\n    \"assistant_scope\": \"Monitor and report real-time attendance status including check-in/check-out verification \\n- Analyze historical attendance data, calculate work hours, overtime, and attendance statistics \\n- Generate personalized attendance insights and recommendations\",\n    \"assistant_tone\": \"- Humor and sarcasm can be tricky in text. Let's keep the conversation straightforward and avoid misunderstandings\\n- Even in casual conversations, Assistant must maintain a level of professionalism. Let's keep the interaction respectful and professional.\",\n    \n    \"vn_pronoun\": \"Trong ti·∫øng vi·ªát, Assistant lu√¥n l√† \\\"Em\\\" v√† Assistant PH·∫¢I t·ª± x∆∞ng l√† \\\"Em\\\" trong t·∫•t c·∫£ c√°c tr∆∞·ªùng h·ª£p. \\nAssistant g·ªçi User theo danh x∆∞ng l·ªãch s·ª± l√† \\\"anh\\\" n·∫øu gi·ªõi t√≠nh l√† NAM ho·∫∑c \\\"ch·ªã\\\" n·∫øu gi·ªõi t√≠nh l√† N·ªÆ v√† n·∫øu ch∆∞a x√°c ƒë·ªãnh ƒë∆∞·ª£c gi·ªõi t√≠nh th√¨ g·ªçi User l√† \\\"anh/ch·ªã\\\". \\n\\nXem c√°c v√≠ d·ª• b√™n d∆∞·ªõi ƒë·ªÉ hi·ªÉu r√µ c√°ch d√πng\\nUser: Xin ch√†o\\nReasoning: User n√≥i xin ch√†o nh∆∞ng kh√¥ng x√°c ƒë·ªãnh ƒë∆∞·ª£c gi·ªõi t√≠nh n√™n Assistant s·∫Ω g·ªçi User l√† \\\"anh/ch·ªã\\\", Assistant s·∫Ω l√† \\\"em\\\" \\nAssistant: D·∫°, em c√≥ th·ªÉ gi√∫p g√¨ cho anh/ch·ªã?\\n\\nUser: Ch√†o em, anh l√† T√πng, cho anh h·ªèi m·ªôt ch√∫t.\\nReasoning: User x∆∞ng \\\"anh\\\" v√† gi·ªõi thi·ªáu t√™n l√† \\\"T√πng\\\" n√™n x√°c ƒë·ªãnh ƒë∆∞·ª£c gi·ªõi t√≠nh l√† Nam n√™n s·∫Ω g·ªçi User b·∫±ng danh x∆∞ng v√† t√™n l√† \\\"Anh T√πng\\\". Assistant s·∫Ω l√† \\\"Em\\\"\\nAssistant: Ch√†o anh T√πng, em c√≥ th·ªÉ gi√∫p g√¨ cho anh.\"\n}"
      },
      "name": "Session Manager"
    },
    {
      "id": "040cbb402d38d3e6a7eea76162a38c6f",
      "type": "if",
      "componentType": "switch",
      "properties": {
        "condition": "session.recall_counter > 3"
      },
      "branches": {
        "true": [
          {
            "id": "13dd58e409027c5d3a1e757d979bdaab",
            "type": "setVar",
            "componentType": "task",
            "properties": {
              "varName": "session.recall_counter",
              "varValue": "0"
            },
            "name": "Var [session.recall_counter]"
          },
          {
            "id": "875fbf27694a010a89e63834b57b14f4",
            "type": "botSendText",
            "componentType": "task",
            "properties": {
              "text": "D·∫°, em xin l·ªói, b√™n em v·ª´a g·∫∑p ch√∫t v·∫•n ƒë·ªÅ v·ªõi ƒë∆∞·ªùng truy·ªÅn m·∫°ng. Anh/ch·ªã g·ª≠i l·∫°i th√¥ng tin v·ª´a r·ªìi gi√∫p em nh√©."
            },
            "name": "Bot Send Text"
          },
          {
            "id": "a523a82d67d20d06df6433e17e02bf92",
            "type": "clearTopic",
            "componentType": "task",
            "properties": {},
            "name": "Clear Topic"
          },
          {
            "id": "56ecbb1985c0dc4559b03bd6f8874c2f",
            "type": "break",
            "componentType": "task",
            "properties": {},
            "name": "Break"
          }
        ],
        "false": []
      },
      "name": "Recall counters exceeded?"
    },
    {
      "id": "10bc708dba622d91344d962b1458cc92",
      "type": "python",
      "componentType": "task",
      "properties": {
        "varName": "user_id",
        "expression": "def get_user_input( input ):\n    user_id, user_question = input.split( \"|\", 1 )\n    return user_id\n\nhuman_input = \"{{ human_input }}\"\nprint( get_user_input( human_input ) )"
      },
      "name": "Python"
    },
    {
      "id": "6cb8a7e5315c62396f00dbf698b02ca7",
      "type": "python",
      "componentType": "task",
      "properties": {
        "varName": "raw_user_input",
        "expression": "def get_user_input( input ):\n    user_id, user_input = input.split( \"|\", 1 )\n    return user_input\n\nhuman_input = \"{{ human_input }}\"\nprint( get_user_input( human_input ) )"
      },
      "name": "Python"
    },
    {
      "id": "acd26cd265b849c20f82db09a87f5bf6",
      "type": "router",
      "componentType": "task",
      "properties": {
        "setting": [
          {
            "topic": "greetings",
            "phrases": [
              "hello",
              "hi",
              "ch√†o b·∫°n",
              "xin ch√†o",
              "c√≥ ai ·ªü ƒë√¢y kh√¥ng"
            ],
            "keywords": [
              "hello",
              "hi",
              "ch√†o b·∫°n",
              "xin ch√†o",
              "c√≥ ai ·ªü ƒë√¢y kh√¥ng"
            ]
          },
          {
            "topic": "attendance",
            "phrases": [
              "check-in",
              "check in",
              "check-out",
              "check out",
              "ch·∫•m c√¥ng",
              "v√†o l√†m",
              "gi·ªù v√†o",
              "gi·ªù ra",
              "th·ªùi gian v√†o",
              "th·ªùi gian ra",
              "ƒëi mu·ªôn",
              "ng√†y c√¥ng",
              "ƒë∆∞·ª£c t√≠nh ng√†y c√¥ng",
              "ƒëi l√†m ƒë·∫ßy ƒë·ªß",
              "b·ªã tr·ª´ c√¥ng",
              "vi ph·∫°m",
              "ƒëi mu·ªôn",
              "v·ªÅ mu·ªôn",
              "v·ªÅ s·ªõm",
              "kh√¥ng ƒë·ªß c√¥ng",
              "b·ªã tr·ª´ gi·ªù",
              "b·ªã tr·ª´ c√¥ng",
              "ƒëi tr·ªÖ",
              "h√¥m nay",
              "h√¥m qua",
              "h√¥m tr∆∞·ªõc",
              "h√¥m kia",
              "ng√†y X (c·ª• th·ªÉ: 10/7, 1/8, 10, 12, 15, v.v.)",
              "th·ª© X (th·ª© 2, th·ª© 3, th·ª© 4, th·ª© 5, th·ª© 7, v.v.)",
              "tu·∫ßn n√†y",
              "tu·∫ßn tr∆∞·ªõc",
              "tu·∫ßn tr∆∞·ªõc n·ªØa",
              "tu·∫ßn v·ª´a r·ªìi",
              "th√°ng n√†y",
              "th√°ng v·ª´a r·ªìi",
              "th√°ng tr∆∞·ªõc",
              "ƒë·∫ßu tu·∫ßn",
              "ƒë·∫ßu th√°ng",
              "t·ª´ ng√†y X ƒë·∫øn ng√†y Y",
              "t√¥i ƒë√£ ‚Ä¶ ch∆∞a",
              "t√¥i ‚Ä¶ l√∫c n√†o",
              "l√† l√∫c n√†o",
              "th√¨ sao",
              "th·∫ø n√†o",
              "trong kho·∫£ng th·ªùi gian ƒë√≥",
              "ƒê√≥ l√† nh·ªØng ng√†y n√†o?"
            ],
            "keywords": [
              "check-in",
              "check in",
              "check-out",
              "check out",
              "ch·∫•m c√¥ng",
              "v√†o l√†m",
              "gi·ªù v√†o",
              "gi·ªù ra",
              "th·ªùi gian v√†o",
              "th·ªùi gian ra",
              "ƒëi mu·ªôn",
              "ng√†y c√¥ng",
              "ƒë∆∞·ª£c t√≠nh ng√†y c√¥ng",
              "ƒëi l√†m ƒë·∫ßy ƒë·ªß",
              "b·ªã tr·ª´ c√¥ng",
              "vi ph·∫°m",
              "ƒëi mu·ªôn",
              "v·ªÅ mu·ªôn",
              "v·ªÅ s·ªõm",
              "kh√¥ng ƒë·ªß c√¥ng",
              "b·ªã tr·ª´ gi·ªù",
              "b·ªã tr·ª´ c√¥ng",
              "ƒëi tr·ªÖ",
              "h√¥m nay",
              "h√¥m qua",
              "h√¥m tr∆∞·ªõc",
              "h√¥m kia",
              "ng√†y X (c·ª• th·ªÉ: 10/7, 1/8, 10, 12, 15, v.v.)",
              "th·ª© X (th·ª© 2, th·ª© 3, th·ª© 4, th·ª© 5, th·ª© 7, v.v.)",
              "tu·∫ßn n√†y",
              "tu·∫ßn tr∆∞·ªõc",
              "tu·∫ßn tr∆∞·ªõc n·ªØa",
              "tu·∫ßn v·ª´a r·ªìi",
              "th√°ng n√†y",
              "th√°ng v·ª´a r·ªìi",
              "th√°ng tr∆∞·ªõc",
              "ƒë·∫ßu tu·∫ßn",
              "ƒë·∫ßu th√°ng",
              "t·ª´ ng√†y X ƒë·∫øn ng√†y Y",
              "t√¥i ƒë√£ ‚Ä¶ ch∆∞a",
              "t√¥i ‚Ä¶ l√∫c n√†o",
              "l√† l√∫c n√†o",
              "th√¨ sao",
              "th·∫ø n√†o",
              "trong kho·∫£ng th·ªùi gian ƒë√≥",
              "gi·ªù c√¥ng",
              "ng√†y c√¥ng"
            ]
          },
          {
            "topic": "off_topic",
            "phrases": [
              "l√†m th∆°",
              "vi·∫øt code"
            ],
            "keywords": [
              "l√†m th∆°",
              "vi·∫øt code"
            ]
          }
        ]
      },
      "name": "Router"
    },
    {
      "id": "b11ef36f209327bd8fe76de7a1e3629a",
      "type": "flowSwitch",
      "componentType": "switch",
      "properties": {
        "conditions": {
          "greetings": "greetings",
          "off_topic": "off_topic",
          "attendance": "attendance"
        }
      },
      "branches": {
        "greetings": [
          {
            "id": "d33e8281a8ae7b05b54ded0fe85b75db",
            "type": "botSendText",
            "componentType": "task",
            "properties": {
              "text": "Ch√†o b·∫°n üëã Attendance Bot c√≥ th·ªÉ gi√∫p b·∫°n tra c·ª©u th·ªùi gian check-in/check-out, th√¥ng tin vi ph·∫°m, v.v.\nV√≠ d·ª•, b·∫°n c√≥ th·ªÉ h·ªèi:\n- th·ªùi gian check in, check out c·ªßa t√¥i th·ª© 4 v·ª´a r·ªìi?\n- th·ª© 4 v·ª´a r·ªìi t√¥i c√≥ vi ph·∫°m g√¨ kh√¥ng?\n- ng√†y 25/08 t√¥i c√≥ ƒëi mu·ªôn kh√¥ng?\n\nüí° ƒê·ªÉ k·∫øt qu·∫£ ch√≠nh x√°c nh·∫•t, b·∫°n n√™n ƒë·∫∑t c√¢u h·ªèi theo c√°c v√≠ d·ª• m·∫´u b√™n tr√™n.\n\nüîç H√¥m nay b·∫°n mu·ªën tra c·ª©u th√¥ng tin g√¨?"
            },
            "name": "Bot Send Text"
          },
          {
            "id": "6d174a7d6a49713a3aca4f6dee7b567a",
            "type": "clearTopic",
            "componentType": "task",
            "properties": {},
            "name": "Clear Topic"
          }
        ],
        "off_topic": [
          {
            "id": "e9dc59fd932a7c7554bc9551f030137c",
            "type": "botSendText",
            "componentType": "task",
            "properties": {
              "text": "Xin l·ªói, Attendance Bot kh√¥ng th·ªÉ tr·∫£ l·ªùi c√¢u h·ªèi c·ªßa b·∫°n."
            },
            "name": "Bot Send Text"
          },
          {
            "id": "1482f59b6d490c4c742ffb7384ed9d76",
            "type": "clearTopic",
            "componentType": "task",
            "properties": {},
            "name": "Clear Topic"
          }
        ],
        "attendance": [
          {
            "id": "dd0378f6e848991df0759b8fc8a5338e",
            "type": "botAPICall",
            "componentType": "task",
            "properties": {
              "api_response_var_name": "api_session",
              "api_url": "https://api.cmcts.cloud/api/attendance-bot/session/{{ user_id }}",
              "api_body": "",
              "api_header": "{\n    \"Content-Type\": \"application/json\"\n}",
              "api_method": "GET"
            },
            "name": "Bot API Call"
          },
          {
            "id": "dbcc6a3ce89fb85d9d8bb73aec8f78dc",
            "type": "qna",
            "componentType": "task",
            "properties": {
              "instruction": "# Y√™u c·∫ßu\nD·ª±a v√†o ng·ªØ c·∫£nh hi·ªán t·∫°i, h√£y x√°c ƒë·ªãnh xem ng∆∞·ªùi d√πng ƒëang h·ªèi v·ªÅ th√¥ng tin c·ªßa ch√≠nh h·ªç hay h·ªèi v·ªÅ ng∆∞·ªùi kh√°c.\n\n# Ng·ªØ c·∫£nh hi·ªán t·∫°i:\n- T√™n ng∆∞·ªùi d√πng: {{ api_session.data.user_name }}\n- Email ng∆∞·ªùi d√πng: {{ api_session.data.user_email }}\n\n# C√¢u h·ªèi c·ªßa ng∆∞·ªùi d√πng: \n{{ raw_user_input }}\n\n# Quy t·∫Øc x√°c ƒë·ªãnh:\n- N·∫øu c√¢u h·ªèi kh√¥ng ch·ª©a t√™n ho·∫∑c email kh√°c v·ªõi {{ api_session.data.user_name }} v√† {{ api_session.data.user_email }} th√¨ d√π c√≥ hay kh√¥ng xu·∫•t hi·ªán ƒë·∫°i t·ª´ nh√¢n x∆∞ng ‚Äút√¥i‚Äù, ‚Äúc·ªßa t√¥i‚Äù, ‚Äúm√¨nh‚Äù,‚Ä¶ v·∫´n x√°c ƒë·ªãnh l√† Ng∆∞·ªùi d√πng ƒëang h·ªèi v·ªÅ ch√≠nh m√¨nh.\n- N·∫øu c√¢u h·ªèi c√≥ ch·ª©a t√™n ho·∫∑c email kh√°c v·ªõi {{ api_session.data.user_name }} v√† {{ api_session.data.user_email }}, ho·∫∑c ƒë·ªÅ c·∫≠p ƒë·∫øn m·ªôt ng∆∞·ªùi kh√°c trong ng·ªØ c·∫£nh. V√≠ d·ª•: ‚Äúgi√∫p t√¥i xem ƒëi·ªÉm danh c·ªßa Nguy·ªÖn VƒÉn A‚Äù, ‚Äúcheck in c·ªßa t√¥i v√†o ng√†y sinh nh·∫≠t c·ªßa b·∫°n t√¥i‚Äù, ‚Äúemail c·ªßa anh B c√≥ th·ªùi gian check in l√† l√∫c n√†o‚Äù‚Ä¶ Th√¨ x√°c ƒë·ªãnh l√† Ng∆∞·ªùi d√πng ƒëang h·ªèi v·ªÅ ng∆∞·ªùi kh√°c.\n\n# Y√™u c·∫ßu ƒë·∫ßu ra\n- Sau khi ho√†n t·∫•t c√°c b∆∞·ªõc ph√¢n t√≠ch tr√™n, h√£y tr·∫£ v·ªÅ DUY NH·∫§T m·ªôt chu·ªói (string) h·ª£p l·ªá, kh√¥ng k√®m b·∫•t k·ª≥ vƒÉn b·∫£n hay ch√∫ th√≠ch n√†o kh√°c. Gi√° tr·ªã tr·∫£ v·ªÅ ch·ªâ ƒë∆∞·ª£c ph√©p l√† m·ªôt trong hai:\n    - \"Yes\" ‚Üí n·∫øu x√°c ƒë·ªãnh ng∆∞·ªùi d√πng ƒëang h·ªèi v·ªÅ ng∆∞·ªùi kh√°c (out of scope).\n    - \"No\" ‚Üí n·∫øu x√°c ƒë·ªãnh ng∆∞·ªùi d√πng ƒëang h·ªèi v·ªÅ ch√≠nh h·ªç (kh√¥ng out of scope).\n",
              "dataset_uuid": "",
              "dataset_qa_uuid": "",
              "rag_query": "",
              "limit": "2",
              "api_key": "",
              "knowledge": "{{ knowledge_from_rag }}",
              "knowledge_aware": false,
              "chat_history_aware": false,
              "human_input_aware": false,
              "varReply": "out_of_scope",
              "temperature": "0.7",
              "max_tokens": "10000",
              "stop": "",
              "stop_regex": "",
              "pattern": "",
              "json_mode": false,
              "multimodal_mode": false,
              "tools": "",
              "agent_loop": false,
              "llm_alt_model": "gpt-4o-mini"
            },
            "name": "AI GPT-4o Self-Query handler"
          },
          {
            "id": "6a498b96a6a6f85ae2e0b55b6cfe95f3",
            "type": "if",
            "componentType": "switch",
            "properties": {
              "condition": "out_of_scope == \"No\""
            },
            "branches": {
              "true": [
                {
                  "id": "e077ad91a332a949f8f028d8702ca6ac",
                  "type": "qna",
                  "componentType": "task",
                  "properties": {
                    "instruction": "D·ª±a v√†o ng·ªØ c·∫£nh hi·ªán t·∫°i, vi·∫øt l·∫°i c√¢u h·ªèi c·ªßa ng∆∞·ªùi d√πng n·∫øu c·∫ßn thi·∫øt ƒë·ªÉ ƒë·∫£m b·∫£o sao cho c√¢u h·ªèi ƒë∆∞·ª£c ƒë·∫ßy ƒë·ªß c·∫£ th√¥ng tin v·ªÅ th·ªùi gian v√† m·ª•c ƒë√≠ch.\n\nNg·ªØ c·∫£nh hi·ªán t·∫°i:\n- Ng√†y hi·ªán t·∫°i: {{ api_session.data.current_time }}\n- Kho·∫£ng th·ªùi gian m√† ng∆∞·ªùi d√πng ƒëang nh·∫Øc ƒë·∫øn:\n{{ api_session.data.time_query_str }}\n- Ch·ªß ƒë·ªÅ m√† ng∆∞·ªùi d√πng ƒëang nh·∫Øc ƒë·∫øn: {{ api_session.data.topic }}\n- C√¢u h·ªèi tr∆∞·ªõc ƒë√≥ c·ªßa ng∆∞·ªùi d√πng: {{ api_session.data.prev_question }}\n- C√¢u tr·∫£ l·ªùi cho c√¢u h·ªèi tr∆∞·ªõc ƒë√≥: \n{{ api_session.data.prev_answer }}\n\nC√¢u h·ªèi c·ªßa ng∆∞·ªùi d√πng: {{ raw_user_input }}\n\nQuy t·∫Øc x·ª≠ l√Ω:\n1. N·∫øu c√≥ th·ªÉ x√°c ƒë·ªãnh ƒë·∫ßy ƒë·ªß c·∫£ th·ªùi gian v√† m·ª•c ƒë√≠ch t·ª´ c√¢u h·ªèi hi·ªán t·∫°i ho·∫∑c ng·ªØ c·∫£nh tr∆∞·ªõc ƒë√≥ ‚Üí vi·∫øt l·∫°i c√¢u h·ªèi m·ªôt c√°ch r√µ r√†ng, t·ª± nhi√™n.\n2. N·∫øu kh√¥ng th·ªÉ vi·∫øt l·∫°i ƒë·∫ßy ƒë·ªß (thi·∫øu c·∫£ th·ªùi gian l·∫´n m·ª•c ƒë√≠ch, ho·∫∑c m∆° h·ªì kh√¥ng c√≥ c√°ch b·ªï sung) ‚Üí tr·∫£ v·ªÅ chu·ªói \"No\".\n\nL∆∞u √Ω: Theo quy ƒë·ªãnh c·ªßa c√¥ng ty th√¨ 1 th√°ng ƒë∆∞·ª£c hi·ªÉu l√† t·ª´ ng√†y 25 c·ªßa th√°ng n√†y ƒë·∫øn ng√†y 26 c·ªßa th√°ng sau, ch·ª© kh√¥ng ph·∫£i t·ª´ ng√†y 1 ƒë·∫øn ng√†y cu·ªëi th√°ng.\n\nV√≠ d·ª•:\nUser: \"Trong th√°ng 8 t√¥i c√≥ bao nhi√™u ng√†y ƒëi mu·ªôn?\"\nOutput: \"Trong th√°ng 8 (t·ª´ ng√†y 25/07 ƒë·∫øn ng√†y 26/08) t√¥i c√≥ bao nhi√™u ng√†y ƒëi mu·ªôn?\"\n\nUser: \"H√¥m qua th√¨ sao?\"  \nOutput: \"H√¥m qua t√¥i check in l√∫c m·∫•y gi·ªù?\"\n\nUser: \"Th·∫ø c√≥ b·ªã t√≠nh ƒëi mu·ªôn kh√¥ng?\" (ng·ªØ c·∫£nh tr∆∞·ªõc ƒë√≥: ƒë√£ h·ªèi v·ªÅ tu·∫ßn tr∆∞·ªõc)  \nOutput: \"Trong tu·∫ßn tr∆∞·ªõc t√¥i c√≥ b·ªã t√≠nh ƒëi mu·ªôn kh√¥ng?\"\n\nUser: \"Ng√†y 10/8 t√¥i ƒëi l√†m l√∫c n√†o?\"  \nOutput: \"Ng√†y 10/8 t√¥i ƒëi l√†m l√∫c n√†o?\"\n\nUser: \"C√≤n h√¥m ƒë√≥ th√¨ th·∫ø n√†o?\" (kh√¥ng c√≥ ng·ªØ c·∫£nh tr∆∞·ªõc)  \nOutput: \"No\"",
                    "dataset_uuid": "",
                    "dataset_qa_uuid": "",
                    "rag_query": "",
                    "limit": "2",
                    "api_key": "",
                    "knowledge": "{{ knowledge_from_rag }}",
                    "knowledge_aware": false,
                    "chat_history_aware": false,
                    "human_input_aware": true,
                    "varReply": "user_input",
                    "temperature": "0.7",
                    "max_tokens": "16000",
                    "stop": "",
                    "stop_regex": "",
                    "pattern": "",
                    "json_mode": false,
                    "multimodal_mode": false,
                    "tools": "",
                    "agent_loop": false,
                    "llm_alt_model": "gpt-4o-mini"
                  },
                  "name": "AI GPT-4o Rewrite Question"
                },
                {
                  "id": "deaf394e0e968384c98d2769ba340abe",
                  "type": "if",
                  "componentType": "switch",
                  "properties": {
                    "condition": "user_input != \"No\""
                  },
                  "branches": {
                    "true": [
                      {
                        "id": "da014f6068714de6cd47384c4ec52153",
                        "type": "qna",
                        "componentType": "task",
                        "properties": {
                          "instruction": "D·ª±a v√†o ng·ªØ c·∫£nh hi·ªán t·∫°i, h√£y ph√¢n t√≠ch c√¢u h·ªèi c·ªßa ng∆∞·ªùi d√πng ƒë·ªÉ ƒë∆∞a ra ph·∫£n h·ªìi ph√π h·ª£p. \n\nNg·ªØ c·∫£nh hi·ªán t·∫°i: \n- Ng√†y hi·ªán t·∫°i: {{ api_session.data.current_time }} \nC√¢u h·ªèi c·ªßa ng∆∞·ªùi d√πng: {{ user_input }} \n\nQuy t·∫Øc x·ª≠ l√≠ tu·∫ßn t·ª±: (Ph·∫£i th·ª±c hi·ªán tu·∫ßn t·ª± c√°c b∆∞·ªõc t·ª´ 1 ƒë·∫øn 4, kh√¥ng ƒë∆∞·ª£c b·ªè qua ho·∫∑c ho√°n ƒë·ªïi th·ª© t·ª±. Ch·ªâ khi ho√†n t·∫•t b∆∞·ªõc tr∆∞·ªõc ƒë√≥ th√¨ m·ªõi ƒë∆∞·ª£c chuy·ªÉn sang b∆∞·ªõc ti·∫øp theo.) \n\n1. Nh·∫≠n di·ªán th√¥ng tin th·ªùi gian trong c√¢u h·ªèi \n- N·∫øu ng∆∞·ªùi d√πng c√≥ ƒë·ªÅ c·∫≠p ƒë·∫øn th√¥ng tin th·ªùi gian bao g·ªìm ng√†y, th√°ng, nƒÉm, tu·∫ßn, ho·∫∑c c√°c t·ª´ kh√≥a ch·ªâ m·ªëc th·ªùi gian c·ª• th·ªÉ ho·∫∑c t∆∞∆°ng ƒë·ªëi nh∆∞: \n    - ‚Äúh√¥m nay‚Äù, ‚Äúng√†y mai‚Äù, ‚Äúh√¥m qua‚Äù - ‚Äúth·ª© 3 v·ª´a qua‚Äù, ‚Äúth·ª© 3 tu·∫ßn n√†y‚Äù, ‚Äúh√¥m th·ª© 3‚Äù, ‚Äúh√¥m th·ª© 3 v·ª´a r·ªìi‚Äù - ‚Äútu·∫ßn n√†y‚Äù, ‚Äúth√°ng tr∆∞·ªõc‚Äù, ‚Äúqu√Ω n√†y‚Äù \n    - ‚Äúng√†y 1/8‚Äù, ‚Äúth√°ng 7‚Äù, ‚ÄúnƒÉm 2025‚Äù - ‚Äúl√∫c 8 gi·ªù‚Äù, ‚Äú9h s√°ng‚Äù, ‚Äúchi·ªÅu nay‚Äù \n    - ‚Äútrong 3 ng√†y g·∫ßn ƒë√¢y‚Äù, ‚Äú7 ng√†y qua‚Äù, ‚Äúcu·ªëi tu·∫ßn‚Äù - ‚Äúth√°ng [s·ªë] n√†y‚Äù, ‚Äúth√°ng n√†y‚Äù, ‚Äúth√°ng v·ª´a r·ªìi‚Äù, ‚Äúth√°ng v·ª´a qua‚Äù \nth√¨ chuy·ªÉn sang **B∆∞·ªõc 2** \n\n2. X√°c ƒë·ªãnh lo·∫°i th·ªùi gian trong c√¢u h·ªèi \n- M·ªôt ng√†y c·ª• th·ªÉ (1 c·∫∑p start_date, end_date v·ªõi start_date = end_date). \n    - V√≠ d·ª•: \n        - H√¥m nay t√¥i check-in ch∆∞a? \n        - Ng√†y 10 th√°ng 7 t√¥i v√†o l√†m m·∫•y gi·ªù? \n        - Gi·ªù check out h√¥m kia l√† l√∫c n√†o? \n        - Th·ª© 3 tu·∫ßn tr∆∞·ªõc t√¥i check in l√∫c n√†o? \n        - Th·ª© 5 tu·∫ßn tr∆∞·ªõc n·ªØa t√¥i check out m·∫•y gi·ªù? \nho·∫∑c c√≥ ch·ª©a c√°c c·ª•m t·ª´ g·ª£i √Ω m·ªôt ng√†y c·ª• th·ªÉ, nh∆∞: \"h√¥m nay\", \"h√¥m qua\", \"h√¥m kia\", \"h√¥m tr∆∞·ªõc\", \"ng√†y [s·ªë]\", \"ng√†y [s·ªë] th√°ng [s·ªë]\", \"th·ª© 2 tu·∫ßn tr∆∞·ªõc\", \"th·ª© 6 v·ª´a r·ªìi\", \"th·ª© 4 tu·∫ßn n√†y\", \"th·ª© 3 v·ª´a qua\" v.v. \n- M·ªôt kho·∫£ng th·ªùi gian c·ª• th·ªÉ (1 c·∫∑p start_date, end_date v·ªõi start_date kh√°c end_date). \n    - V√≠ d·ª•: \n        - ‚ÄúTrong th√°ng 6 t√¥i ƒëi l√†m m·∫•y gi·ªù m·ªói ng√†y?‚Äù \n        - ‚ÄúT·ª´ ng√†y 3/8 ƒë·∫øn 18/8 t√¥i c√≥ ƒëi l√†m ƒë·∫ßy ƒë·ªß kh√¥ng?‚Äù \n        - Trong th√°ng 6 t√¥i ƒëi l√†m m·∫•y gi·ªù m·ªói ng√†y? \n        - Th·ªùi gian check-in c·ªßa t√¥i tu·∫ßn v·ª´a r·ªìi? \n        - C√≥ ng√†y n√†o trong 2 tu·∫ßn v·ª´a r·ªìi t√¥i qu√™n ch·∫•m c√¥ng kh√¥ng? \n        - T·ª´ ng√†y 3/8 ƒë·∫øn 18/8 t√¥i c√≥ ƒëi l√†m ƒë·∫ßy ƒë·ªß kh√¥ng? \n        - Th√°ng n√†y t√¥i ƒëi mu·ªôn bao nhi√™u bu·ªïi? \nho·∫∑c ch·ª©a c√°c c·ª•m t·ª´ th·ªÉ hi·ªán kho·∫£ng th·ªùi gian, nh∆∞: ‚Äútrong tu·∫ßn tr∆∞·ªõc‚Äù, ‚Äútrong th√°ng n√†y‚Äù, ‚Äú2 tu·∫ßn v·ª´a r·ªìi‚Äù, \"tu·∫ßn v·ª´a r·ªìi\", \"tu·∫ßn v·ª´a qua\", ‚Äút·ª´ ng√†y ... ƒë·∫øn ng√†y ...‚Äù, ‚Äút·ª´ th·ª© 2 ƒë·∫øn th·ª© 6‚Äù, ‚Äút·ª´ ƒë·∫ßu tu·∫ßn ƒë·∫øn nay‚Äù, ‚Äút·ª´ ƒë·∫ßu tu·∫ßn n√†y ƒë·∫øn nay‚Äù, ‚Äút·ª´ ƒë·∫ßu tu·∫ßn tr∆∞·ªõc ƒë·∫øn nay‚Äù, ‚Äút·ª´ ƒë·∫ßu tu·∫ßn v·ª´a r·ªìi ƒë·∫øn nay‚Äù, v.v. \n- Nhi·ªÅu kho·∫£ng/m·ªëc th·ªùi gian c·ª• th·ªÉ (nhi·ªÅu c·∫∑p start_date, end_date). \n    - Khi trong c√¢u h·ªèi xu·∫•t hi·ªán t·ª´ 2 m·ªëc tr·ªü l√™n ho·∫∑c nhi·ªÅu kho·∫£ng th·ªùi gian ƒë∆∞·ª£c n·ªëi b·∫±ng c√°c t·ª´ li√™n k·∫øt nh∆∞ ‚Äúv√†‚Äù, ‚Äúho·∫∑c‚Äù, ‚Äúc≈©ng nh∆∞‚Äù. \n    - V√≠ d·ª•: \n        - C√¢u \"M√πng 10, 12, 15 th√°ng tr∆∞·ªõc t√¥i check in l√∫c n√†o?\" c√≥ 3 ng√†y c·ª• th·ªÉ \n        - C√¢u \"C√°c ng√†y 10, 12, 15 c·ªßa th√°ng v·ª´a r·ªìi t√¥i c√≥ ƒëi mu·ªôn kh√¥ng?\" c√≥ 3 ng√†y c·ª• th·ªÉ \n        - C√¢u \"Ng√†y 10, 12, 15 th√°ng v·ª´a qua t√¥i c√≥ ƒë∆∞·ª£c t√≠nh ƒë·ªß ng√†y c√¥ng kh√¥ng?\" c√≥ 3 ng√†y c·ª• th·ªÉ \n        - C√¢u \"T·ª´ ng√†y 1 ƒë·∫øn 5 v√† t·ª´ ng√†y 10 ƒë·∫øn 12 t√¥i c√≥ ƒëi l√†m ƒë·∫ßy ƒë·ªß kh√¥ng\" c√≥ 2 kho·∫£ng th·ªùi gian c·ª• th·ªÉ \n    - L∆∞u √Ω: V·ªõi m·ªói kho·∫£ng/m·ªëc th·ªùi gian, c·∫ßn l·∫∑p l·∫°i **B∆∞·ªõc 3 - T√≠nh kho·∫£ng th·ªùi gian** ƒë·ªÉ t√≠nh start_date v√† end_date ri√™ng. \n- Sau khi x√°c ƒë·ªãnh ƒë∆∞·ª£c lo·∫°i th·ªùi gian th√¨ chuy·ªÉn sang **B∆∞·ªõc 3** \n\n3. T√≠nh kho·∫£ng th·ªùi gian \n- Cho 1 ng√†y c·ª• th·ªÉ \n    - Nh·∫≠n di·ªán c√°c c·ª•m t·ª´ m√¥ t·∫£ ng√†y c·ª• th·ªÉ, bao g·ªìm: \n        - \"h√¥m qua\", \"h√¥m nay\", \"h√¥m tr∆∞·ªõc\", \"h√¥m kia\", \"h√¥m k√¨a\" \n        - \"ng√†y 5\", \"m√πng 3\" - \"th·ª© 2\", \"th·ª© ba tu·∫ßn tr∆∞·ªõc\", \"th·ª© nƒÉm tu·∫ßn n√†y\" \n        - \"ng√†y 15 th√°ng 6\", \"ng√†y 2 th√°ng tr∆∞·ªõc\", v.v. \n    - Gi·∫£i th√≠ch c√°c c·ª•m th·ªùi gian t∆∞∆°ng ƒë·ªëi d·ª±a tr√™n current_date: \n        - ‚Äúh√¥m nay‚Äù ‚Üí ch√≠nh l√† current_date \n        - ‚Äúh√¥m qua‚Äù ‚Üí current_date - 1 ng√†y \n        - ‚Äúh√¥m tr∆∞·ªõc‚Äù ‚Üí current_date - 2 ng√†y \n        - ‚Äúh√¥m kia‚Äù ‚Üí current_date \n        - 2 ng√†y - ‚Äúh√¥m k√¨a‚Äù ‚Üí current_date \n        - 3 ng√†y - ‚Äúth·ª© [x] tu·∫ßn n√†y‚Äù ‚Üí ng√†y g·∫ßn nh·∫•t ·ª©ng v·ªõi th·ª© ƒë√≥ trong c√πng tu·∫ßn v·ªõi current_date \n        - ‚Äúth·ª© [x] tu·∫ßn tr∆∞·ªõc‚Äù ‚Üí ng√†y t∆∞∆°ng ·ª©ng v·ªõi th·ª© ƒë√≥ c·ªßa tu·∫ßn tr∆∞·ªõc (tu·∫ßn g·∫ßn nh·∫•t ƒë√£ k·∫øt th√∫c) \n        - ‚Äúng√†y [s·ªë]‚Äù ho·∫∑c ‚Äúm√πng [s·ªë]‚Äù ‚Üí c√πng th√°ng v·ªõi current_date \n        - ‚Äúng√†y [s·ªë] th√°ng [s·ªë]‚Äù ‚Üí s·ª≠ d·ª•ng nƒÉm c·ªßa current_date, tr·ª´ khi ng∆∞·ªùi d√πng n√≥i r√µ nƒÉm \n        - ‚Äúng√†y [s·ªë] th√°ng tr∆∞·ªõc‚Äù ‚Üí ng√†y t∆∞∆°ng ·ª©ng c·ªßa th√°ng tr∆∞·ªõc \n        - ‚Äúng√†y [s·ªë] th√°ng n√†y‚Äù ‚Üí ng√†y t∆∞∆°ng ·ª©ng c·ªßa th√°ng hi·ªán t·∫°i \n    - V√≠ d·ª•: \n        - N·∫øu current_date l√† 2025-03-08 v√† ng∆∞·ªùi d√πng h·ªèi: ‚ÄúT√¥i check in h√¥m qua l√∫c m·∫•y gi·ªù?‚Äù th√¨ k·∫øt qu·∫£ t√≠nh to√°n ƒë∆∞·ª£c s·∫Ω l√†: current_time: \"2025-03-07\" \n        - N·∫øu ng∆∞·ªùi d√πng n√≥i: ‚ÄúNg√†y 2 th√°ng tr∆∞·ªõc t√¥i ngh·ªâ ph√©p‚Äù th√¨ k·∫øt qu·∫£ t√≠nh to√°n ƒë∆∞·ª£c s·∫Ω l√†: current_time: \"2025-02-02\" \n        - N·∫øu ng∆∞·ªùi d√πng n√≥i: ‚ÄúTh·ª© ba tu·∫ßn n√†y t√¥i ƒë·∫øn tr·ªÖ‚Äù th√¨ k·∫øt qu·∫£ t√≠nh to√°n ƒë∆∞·ª£c s·∫Ω l√†: current_time: \"2025-03-04\" \n- Cho 1 kho·∫£ng th·ªùi gian \n    - ƒê·ªãnh nghƒ©a chu·∫©n\n        - Quy ∆∞·ªõc v·ªÅ tu·∫ßn l√†m vi·ªác: T·ª´ th·ª© Hai ƒë·∫øn th·ª© S√°u\n        - Quy ∆∞·ªõc v·ªÅ th√°ng\n            - Th√°ng hi·ªán t·∫°i: T·ª´ ng√†y 26 c·ªßa th√°ng tr∆∞·ªõc ƒë·∫øn 25 c·ªßa th√°ng hi·ªán t·∫°i\n            - Th√°ng ƒë√£ qua: T·ª´ ng√†y 26 c·ªßa th√°ng tr∆∞·ªõc ƒë√≥ ƒë·∫øn 25 c·ªßa th√°ng m√† ng∆∞·ªùi d√πng mu·ªën h·ªèi\n    - C√°c pattern nh·∫≠n di·ªán v√† x·ª≠ l√Ω\n        - Pattern 1: Kho·∫£ng th·ªùi gian tuy·ªát ƒë·ªëi\n            - C·∫•u tr√∫c: \"t·ª´ [ng√†y c·ª• th·ªÉ] ƒë·∫øn [ng√†y c·ª• th·ªÉ]\"\n            - V√≠ d·ª•:\n                - \"t·ª´ ng√†y 1 ƒë·∫øn ng√†y 5\" ‚Üí start_date: YYYY-MM-01, end_date: YYYY-MM-05 (c√πng th√°ng v·ªõi current_date)\n                - \"t·ª´ 15 th√°ng tr∆∞·ªõc ƒë·∫øn 20 th√°ng n√†y\" ‚Üí start_date: (th√°ng tr∆∞·ªõc)-15, end_date: (th√°ng hi·ªán t·∫°i)-20\n        - Pattern 2: Kho·∫£ng th·ªùi gian theo tu·∫ßn\n            - C√°c c·ª•m t·ª´ nh·∫≠n di·ªán:\n                - \"tu·∫ßn n√†y\", \"tu·∫ßn hi·ªán t·∫°i\"\n                - \"tu·∫ßn tr∆∞·ªõc\", \"tu·∫ßn v·ª´a r·ªìi\", \"tu·∫ßn v·ª´a qua\"\n                - \"tu·∫ßn tr∆∞·ªõc n·ªØa\", \"hai tu·∫ßn tr∆∞·ªõc\"\n                - \"X tu·∫ßn tr∆∞·ªõc\", \"X tu·∫ßn v·ª´a r·ªìi\"\n            - Logic t√≠nh to√°n tu·∫ßn:\n                current_week = tu·∫ßn ch·ª©a current_date\n                week_offset = s·ªë tu·∫ßn c·∫ßn l√πi v·ªÅ qu√° kh·ª©\n\n                V·ªõi \"tu·∫ßn n√†y\":\n                - start_date = th·ª© Hai c·ªßa current_week\n                - end_date = current_date (n·∫øu ch∆∞a h·∫øt tu·∫ßn) ho·∫∑c th·ª© S√°u (n·∫øu ƒë√£ h·∫øt tu·∫ßn)\n\n                V·ªõi \"tu·∫ßn tr∆∞·ªõc\":\n                - target_week = current_week - 1\n                - start_date = th·ª© Hai c·ªßa target_week  \n                - end_date = th·ª© S√°u c·ªßa target_week\n\n                V·ªõi \"X tu·∫ßn tr∆∞·ªõc\":\n                - target_week = current_week - X\n                - start_date = th·ª© Hai c·ªßa target_week\n                - end_date = th·ª© S√°u c·ªßa target_week\n\n                V·ªõi \"X tu·∫ßn v·ª´a r·ªìi/qua\":\n                - start_date = th·ª© Hai c·ªßa (current_week - X)\n                - end_date = th·ª© S√°u c·ªßa (current_week - 1)\n        - Pattern 3: Kho·∫£ng th·ªùi gian theo th√°ng\n            - C√°c c·ª•m t·ª´ nh·∫≠n di·ªán:\n                - \"th√°ng n√†y\", \"th√°ng hi·ªán t·∫°i\"\n                - \"th√°ng tr∆∞·ªõc\", \"th√°ng v·ª´a r·ªìi\"\n                - \"th√°ng [s·ªë]\", \"th√°ng [s·ªë] nƒÉm [nƒÉm]\"\n            - Logic t√≠nh to√°n:\n                - \"th√°ng n√†y\": start_date = ng√†y 1 c·ªßa th√°ng hi·ªán t·∫°i, end_date = current_date\n                - \"th√°ng tr∆∞·ªõc\": start_date = ng√†y 1 c·ªßa th√°ng tr∆∞·ªõc, end_date = ng√†y cu·ªëi th√°ng tr∆∞·ªõc\n                - \"th√°ng [s·ªë]\": s·ª≠ d·ª•ng nƒÉm hi·ªán t·∫°i n·∫øu kh√¥ng ch·ªâ ƒë·ªãnh nƒÉm\n        - Pattern 4: Kho·∫£ng th·ªùi gian theo ng√†y\n            C√°c c·ª•m t·ª´ nh·∫≠n di·ªán:\n                \"X ng√†y qua\", \"X ng√†y v·ª´a r·ªìi\", \"X ng√†y g·∫ßn ƒë√¢y\"\n                \"t·ª´ ƒë·∫ßu tu·∫ßn ƒë·∫øn nay\"\n                \"t·ª´ ƒë·∫ßu th√°ng ƒë·∫øn nay\"\n            Logic t√≠nh to√°n:\n                \"X ng√†y qua\": start_date = current_date - X, end_date = current_date - 1\n                \"t·ª´ ƒë·∫ßu tu·∫ßn ƒë·∫øn nay\": start_date = th·ª© Hai tu·∫ßn hi·ªán t·∫°i, end_date = current_date\n                \"t·ª´ ƒë·∫ßu th√°ng ƒë·∫øn nay\": start_date = ng√†y 1 th√°ng hi·ªán t·∫°i, end_date = current_date\n    V√≠ d·ª• t√≠nh to√°n v·ªõi current_date = 2025-03-08 (th·ª© B·∫£y)\n        V√≠ d·ª• Pattern 1:\n\n        \"t·ª´ m√πng 1 ƒë·∫øn m√πng 6\" ‚Üí start_date: \"2025-03-01\", end_date: \"2025-03-06\"\n        \"t·ª´ 15 th√°ng tr∆∞·ªõc ƒë·∫øn 20 th√°ng n√†y\" ‚Üí start_date: \"2025-02-15\", end_date: \"2025-03-20\"\n\n        V√≠ d·ª• Pattern 2:\n\n        \"tu·∫ßn n√†y\" ‚Üí start_date: \"2025-03-03\" (th·ª© Hai), end_date: \"2025-03-08\" (current_date)\n        \"tu·∫ßn tr∆∞·ªõc\" ‚Üí start_date: \"2025-02-24\" (th·ª© Hai), end_date: \"2025-02-28\" (th·ª© S√°u)\n        \"hai tu·∫ßn tr∆∞·ªõc\" ‚Üí start_date: \"2025-02-17\" (th·ª© Hai), end_date: \"2025-02-21\" (th·ª© S√°u)\n        \"hai tu·∫ßn v·ª´a r·ªìi\" ‚Üí start_date: \"2025-02-17\" (th·ª© Hai), end_date: \"2025-02-28\" (th·ª© S√°u tu·∫ßn tr∆∞·ªõc)\n\n        V√≠ d·ª• Pattern 3:\n\n        \"th√°ng n√†y\" ‚Üí start_date: \"2025-04-26\", end_date: \"2025-04-25\"\n        \"th√°ng tr∆∞·ªõc\" ‚Üí start_date: \"2025-03-26\", end_date: \"2025-03-25\"\n\n        V√≠ d·ª• Pattern 4:\n\n        \"ba ng√†y v·ª´a qua\" ‚Üí start_date: \"2025-03-05\", end_date: \"2025-03-07\"\n        \"t·ª´ ƒë·∫ßu tu·∫ßn ƒë·∫øn nay\" ‚Üí start_date: \"2025-03-03\", end_date: \"2025-03-08\"\n        \"t·ª´ ƒë·∫ßu th√°ng ƒë·∫øn nay\" ‚Üí start_date: \"2025-03-01\", end_date: \"2025-03-08\"\n\nY√™u c·∫ßu ƒë·∫ßu ra JSON: \n- Sau khi ho√†n t·∫•t c√°c b∆∞·ªõc ph√¢n t√≠ch tr√™n, h√£y tr·∫£ v·ªÅ DUY NH·∫§T m·ªôt chu·ªói JSON h·ª£p l·ªá (kh√¥ng c√≥ vƒÉn b·∫£n gi·∫£i th√≠ch, kh√¥ng c√≥ ch√∫ th√≠ch) v·ªõi c·∫•u tr√∫c sau: \n    - Top-level object c√≥ c√°c tr∆∞·ªùng: \n        - \"time_query\": array of objects ‚Äî m·ªói object ƒë·∫°i di·ªán cho m·ªôt c·∫∑p start_date / end_date ƒë√£ nh·∫≠n di·ªán ·ªü B∆∞·ªõc 1, 2, 3, 4. \n\n    - Schema cho time_query (m·ªói ph·∫ßn t·ª≠): \n        { \n            \"start_date\": \"YYYY-MM-DD\", \n            \"end_date\": \"YYYY-MM-DD\" \n        } \n\n    - V√≠ d·ª• ƒë·∫ßu ra h·ª£p l·ªá: \n        { \n            \"time_query\": [ \n                { \n                    \"start_date\": \"2025-08-07\", \n                    \"end_date\": \"2025-08-07\" \n                } \n            ] \n        } \n\n        { \n            \"time_query\": [ \n                { \n                    \"start_date\": \"2025-07-01\", \n                    \"end_date\": \"2025-07-15\" \n                } \n            ] \n        }\n",
                          "dataset_uuid": "",
                          "dataset_qa_uuid": "",
                          "rag_query": "",
                          "limit": "2",
                          "api_key": "",
                          "knowledge": "",
                          "knowledge_aware": false,
                          "chat_history_aware": false,
                          "human_input_aware": true,
                          "varReply": "time_result",
                          "temperature": "0.7",
                          "max_tokens": "16000",
                          "stop": "",
                          "stop_regex": "",
                          "pattern": "",
                          "json_mode": true,
                          "multimodal_mode": false,
                          "tools": "",
                          "agent_loop": false,
                          "llm_alt_model": "gpt-4o-mini"
                        },
                        "name": "AI GPT-4o Time Query Handler"
                      },
                      {
                        "id": "a848168543313429d9679e2e65c120af",
                        "type": "setVar",
                        "componentType": "task",
                        "properties": {
                          "varName": "time_result_json",
                          "varValue": "json.loads(time_result)"
                        },
                        "name": "Var [time_result_json]"
                      },
                      {
                        "id": "c4f3fbd1829bb9da135aeb29226660a8",
                        "type": "python",
                        "componentType": "task",
                        "properties": {
                          "varName": "check_json",
                          "expression": "def check_keys( json_check, keys ):\n    for key in keys:\n        if key not in json_check:\n            return \"No\"\n    return \"Yes\"\n\nbot_check_json = {{ time_result_json }}\nkeys_to_check = [ \"time_query\" ]\n\nprint( check_keys( bot_check_json, keys_to_check ) )"
                        },
                        "name": "Python"
                      },
                      {
                        "id": "8236c9dfdef07d63c889358eb4c3bb28",
                        "type": "if",
                        "componentType": "switch",
                        "properties": {
                          "condition": "check_json == \"Yes\""
                        },
                        "branches": {
                          "true": [
                            {
                              "id": "2ee2c7be1d5aeb17b9155e566714a076",
                              "type": "qna",
                              "componentType": "task",
                              "properties": {
                                "instruction": "D·ª±a v√†o ng·ªØ c·∫£nh hi·ªán t·∫°i, h√£y ph√¢n t√≠ch c√¢u h·ªèi c·ªßa ng∆∞·ªùi d√πng ƒë·ªÉ ƒë∆∞a ra ph·∫£n h·ªìi ph√π h·ª£p.\n\nNg·ªØ c·∫£nh hi·ªán t·∫°i:\n- Ng√†y hi·ªán t·∫°i: {{ api_session.data.current_time }}\n- Kho·∫£ng th·ªùi gian m√† ng∆∞·ªùi d√πng ƒëang nh·∫Øc ƒë·∫øn:\n{{ api_session.data.time_query_str }}\n- Ch·ªß ƒë·ªÅ m√† ng∆∞·ªùi d√πng ƒëang nh·∫Øc ƒë·∫øn: {{ api_session.data.topic }}\n- C√¢u h·ªèi tr∆∞·ªõc ƒë√≥ c·ªßa ng∆∞·ªùi d√πng: {{ api_session.data.prev_question }}\n- C√¢u tr·∫£ l·ªùi cho c√¢u h·ªèi tr∆∞·ªõc ƒë√≥: \n{{ api_session.data.prev_answer }}\n- L∆∞u √Ω:\n    - C·∫∑p c√¢u h·ªèi v√† c√¢u tr·∫£ l·ªùi tr∆∞·ªõc ƒë√≥ ch·ªâ mang t√≠nh ch·∫•t tham kh·∫£o v√† ch·ªâ s·ª≠ d·ª•ng n·∫øu c√¢u h·ªèi hi·ªán t·∫°i y√™u c·∫ßu li√™n k·∫øt v·ªõi m·ªëc th·ªùi gian ƒë√£ ƒë∆∞·ª£c ƒë·ªÅ c·∫≠p trong c√¢u tr∆∞·ªõc.\n    - V√≠ d·ª•:\n        - C√¢u 1: ‚ÄúTu·∫ßn v·ª´a r·ªìi c√≥ h√¥m n√†o t√¥i ƒëi mu·ªôn kh√¥ng?‚Äù\n        - C√¢u 2: ‚ÄúTh·ªùi gian check in nh·ªØng ng√†y ƒë√≥?‚Äù\n        ‚Üí ·ªû c√¢u 2, c·∫ßn l·∫•y m·ªëc th·ªùi gian t·ª´ c√¢u tr·∫£ l·ªùi c·ªßa c√¢u 1 (‚Äúnh·ªØng ng√†y ƒë√≥‚Äù = c√°c ng√†y ƒëi mu·ªôn trong tu·∫ßn v·ª´a r·ªìi) ƒë·ªÉ x√°c ƒë·ªãnh ch√≠nh x√°c kho·∫£ng th·ªùi gian.\n\nC√¢u h·ªèi c·ªßa ng∆∞·ªùi d√πng: {{ user_input }}\n\nQuy t·∫Øc x·ª≠ l√≠ tu·∫ßn t·ª±: (Ph·∫£i th·ª±c hi·ªán tu·∫ßn t·ª± c√°c b∆∞·ªõc t·ª´ 1 ƒë·∫øn 3, kh√¥ng ƒë∆∞·ª£c b·ªè qua ho·∫∑c ho√°n ƒë·ªïi th·ª© t·ª±. Ch·ªâ khi ho√†n t·∫•t b∆∞·ªõc tr∆∞·ªõc ƒë√≥ th√¨ m·ªõi ƒë∆∞·ª£c chuy·ªÉn sang b∆∞·ªõc ti·∫øp theo.)\n\n1. Nh·∫≠n di·ªán th√¥ng tin ch·ªß ƒë·ªÅ trong c√¢u h·ªèi\n- N·∫øu ng∆∞·ªùi d√πng c√≥ ƒë·ªÅ c·∫≠p ƒë·∫øn ch·ªß ƒë·ªÅ v√≠ d·ª• nh∆∞:\n    - ‚ÄúH√¥m qua t√¥i ƒëi mu·ªôn kh√¥ng?‚Äù\n    - ‚ÄúTh·ªùi gian check in c·ªßa t√¥i th·ª© 4 tu·∫ßn tr∆∞·ªõc l√† l√∫c n√†o?‚Äù\n    - ‚ÄúT√¥i ƒë∆∞·ª£c bao nhi√™u ng√†y c√¥ng trong tu·∫ßn n√†y?‚Äù\n    - ‚ÄúNg√†y 1/8 t√¥i c√≥ b·ªã ƒëi mu·ªôn kh√¥ng?‚Äù\nth√¨ x√°c ƒë·ªãnh C√≥ ƒë·ªÅ c·∫≠p ƒë·∫øn ch·ªß ƒë·ªÅ v√† chuy·ªÉn sang **B∆∞·ªõc 2**\n- N·∫øu ng∆∞·ªùi d√πng kh√¥ng ƒë·ªÅ c·∫≠p ƒë·∫øn b·∫•t k·ª≥ ch·ªß ƒë·ªÅ n√†o ·ªü tr√™n, ho·∫∑c ch·ªâ n√≥i ƒë·∫øn th·ªùi gian chung chung m√† kh√¥ng g·∫Øn v·ªõi ch·ªß ƒë·ªÅ, v√≠ d·ª•:\n    - ‚ÄúH√¥m nay th√¨ sao?‚Äù\n    - ‚ÄúH√¥m tr∆∞·ªõc th√¨ th·∫ø n√†o?‚Äù\n    - ‚ÄúTh·ª© 7 tu·∫ßn tr∆∞·ªõc th√¨ sao?‚Äù\n    - \"Th·ª© 2 v·ª´a r·ªìi th√¨ sao?\"\n    - \"Th·ª© 3 v·ª´a qua th√¨ th·∫ø n√†o\"\n    - \"Th·ª© 3 tu·∫ßn tr∆∞·ªõc n·ªØa?\"\nth√¨ x√°c ƒë·ªãnh Kh√¥ng ƒë·ªÅ c·∫≠p ƒë·∫øn ch·ªß ƒë·ªÅ v√† chuy·ªÉn sang **B∆∞·ªõc 3** lu√¥n\n\n2. X√°c ƒë·ªãnh ch·ªß ƒë·ªÅ:\n- N·∫øu ng∆∞·ªùi d√πng h·ªèi v·ªÅ th·ªùi gian check-in / check-out c·ª• th·ªÉ trong ng√†y. V√≠ d·ª•:\n    - H√¥m qua t√¥i v√†o l√†m l√∫c m·∫•y gi·ªù?\n    - Ng√†y 10/7 t√¥i ch·∫•m c√¥ng m·∫•y gi·ªù?\n    - H√¥m nay t√¥i c√≥ qu√™n ch·∫•m c√¥ng kh√¥ng?\n    - Th·ªùi gian check-in h√¥m kia c·ªßa t√¥i l√† m·∫•y gi·ªù?\n    - H√¥m tr∆∞·ªõc t√¥i check out l√∫c n√†o?\n    - Th·ªùi gian check in, out c·ªßa t√¥i?\n    - C√≤n th·ªùi gian check out th√¨ th·∫ø n√†o?\nth√¨ x√°c ƒë·ªãnh ch·ªß ƒë·ªÅ l√† \"Th·ªùi gian Check-in / Check-out\" v√† tr·∫£ v·ªÅ lu√¥n, kh√¥ng c·∫ßn chuy·ªÉn sang **B∆∞·ªõc 3**\n- N·∫øu ng∆∞·ªùi d√πng h·ªèi v·ªÅ th√¥ng tin vi ph·∫°m (bao g·ªìm c·∫£ ƒëi mu·ªôn, v·ªÅ s·ªõm, v√† s·ªë gi·ªù/ph√∫t vi ph·∫°m). V√≠ d·ª•:\n    - Th√°ng tr∆∞·ªõc t√¥i ƒëi mu·ªôn bao nhi√™u ng√†y?\n    - Tu·∫ßn tr∆∞·ªõc t√¥i v·ªÅ s·ªõm m·∫•y l·∫ßn?\n    - Tu·∫ßn v·ª´a r·ªìi t√¥i b·ªã tr·ª´ bao nhi√™u ph√∫t v√¨ ƒëi tr·ªÖ?\n    - T√¥i c√≥ b·ªã t√≠nh ƒëi tr·ªÖ ng√†y n√†o trong tu·∫ßn tr∆∞·ªõc kh√¥ng?\n    - T·ªïng s·ªë l·∫ßn ƒëi tr·ªÖ c·ªßa t√¥i trong th√°ng 6 l√† bao nhi√™u?\n    - T·ªïng th·ªùi gian vi ph·∫°m tu·∫ßn tr∆∞·ªõc l√† bao nhi√™u?\n    - Th·ªùi gian vi ph·∫°m c·ªßa t√¥i h√¥m qua?\n    - V·∫≠y l√† c√≥ b·ªã t√≠nh v·ªÅ s·ªõm kh√¥ng?\n    - Th·∫ø l√† c√≥ b·ªã coi l√† ƒëi mu·ªôn kh√¥ng?\n    - Th·∫ø b·ªã t√≠nh l√† ƒëi mu·ªôn kh√¥ng? \n\nth√¨ x√°c ƒë·ªãnh ch·ªß ƒë·ªÅ l√† \"Th√¥ng tin vi ph·∫°m\" v√† tr·∫£ v·ªÅ lu√¥n, kh√¥ng c·∫ßn chuy·ªÉn sang **B∆∞·ªõc 7**\n- N·∫øu ng∆∞·ªùi d√πng h·ªèi v·ªÅ s·ªë ng√†y c√¥ng ho·∫∑c vi·ªác ƒëi l√†m ƒë·ªß ng√†y. V√≠ d·ª•:\n    - Th√°ng n√†y t√¥i c√≥ bao nhi√™u ng√†y c√¥ng?\n    - T√¥i ƒëi l√†m ƒë·ªß c√¥ng trong th√°ng 6 kh√¥ng?\n    - T·ªïng s·ªë ng√†y c√¥ng c·ªßa t√¥i 2 tu·∫ßn v·ª´a r·ªìi l√† bao nhi√™u?\nth√¨ x√°c ƒë·ªãnh ch·ªß ƒë·ªÅ l√† \"Ng√†y c√¥ng\" v√† tr·∫£ v·ªÅ lu√¥n, kh√¥ng c·∫ßn chuy·ªÉn sang **B∆∞·ªõc 7**\n- L∆∞u √Ω: \n    - N·∫øu trong c√¢u h·ªèi v·ª´a ch·ª©a th√¥ng tin v·ªÅ m·ªôt ch·ªß ƒë·ªÅ c·ª• th·ªÉ (v√≠ d·ª•: check-in/check-out, vi ph·∫°m) v·ª´a c√≥ th√™m c·ª•m t·ª´ ƒëi·ªÅu ki·ªán l·ªçc (v√≠ d·ª•: ‚Äúnh·ªØng ng√†y ƒë·ªß c√¥ng ƒë√≥‚Äù, ‚Äúc√°c ng√†y ƒëi mu·ªôn ƒë√≥‚Äù), th√¨ **∆∞u ti√™n x√°c ƒë·ªãnh ch·ªß ƒë·ªÅ ch√≠nh theo c√¢u h·ªèi g·ªëc**. \n        - C√°c c·ª•m nh∆∞ ‚Äúng√†y ƒë·ªß c√¥ng‚Äù, ‚Äúng√†y vi ph·∫°m‚Äù, ‚Äúng√†y ƒëi mu·ªôn‚Äù ch·ªâ d√πng ƒë·ªÉ **gi·ªõi h·∫°n t·∫≠p ng√†y trong time_query**, kh√¥ng thay ƒë·ªïi topic.\n        - V√≠ d·ª•:\n            - V·ªõi c√¢u h·ªèi: ‚ÄúTh·ªùi gian check in, out c·ªßa t√¥i nh·ªØng ng√†y ƒë·ªß c√¥ng ƒë√≥?‚Äù th√¨ Topic = \"Th·ªùi gian Check-in / Check-out\" v√† Time_query = t·∫≠p ng√†y ƒë·ªß c√¥ng ƒë√£ x√°c ƒë·ªãnh t·ª´ c√¢u tr∆∞·ªõc\n    - N·∫øu c√¢u h·ªèi thu·ªôc lo·∫°i nguy√™n nh√¢n/gi·∫£i th√≠ch (ch·ª©a t·ª´ kh√≥a WHY-intent: v√¨ sao, t·∫°i sao, do ƒë√¢u, nguy√™n nh√¢n, l√Ω do, ‚Ä¶) th√¨ ∆∞u ti√™n ch·ªß ƒë·ªÅ ‚ÄúTh√¥ng tin vi ph·∫°m‚Äù, v√¨ m·ªçi nguy√™n nh√¢n d·∫´n t·ªõi m·∫•t c√¥ng hay sai l·ªách ƒë·ªÅu n·∫±m ·ªü layer ‚Äúvi ph·∫°m‚Äù.\n\n3. N·∫øu kh√¥ng x√°c ƒë·ªãnh ƒë∆∞·ª£c ch·ªß ƒë·ªÅ:\n- N·∫øu ng·ªØ c·∫£nh hi·ªán t·∫°i kh√¥ng c√≥ th√¥ng v·ªÅ Ch·ªß ƒë·ªÅ m√† ng∆∞·ªùi d√πng ƒëang nh·∫Øc ƒë·∫øn th√¨ tr·∫£ v·ªÅ chu·ªói \"Kh√¥ng c√≥\"\n- N·∫øu ng·ªØ c·∫£nh hi·ªán t·∫°i ƒë√£ c√≥ th√¥ng tin v·ªÅ Ch·ªß ƒë·ªÅ m√† ng∆∞·ªùi d√πng ƒëang nh·∫Øc ƒë·∫øn th√¨ B·∫ÆT BU·ªòC ph·∫£i l·∫•y th√¥ng tin ƒë√≥ l√†m ch·ªß ƒë·ªÅ.\n\nY√™u c·∫ßu ƒë·∫ßu ra JSON:\n- Sau khi ho√†n t·∫•t c√°c b∆∞·ªõc ph√¢n t√≠ch tr√™n, h√£y tr·∫£ v·ªÅ DUY NH·∫§T m·ªôt chu·ªói JSON h·ª£p l·ªá (kh√¥ng c√≥ vƒÉn b·∫£n gi·∫£i th√≠ch, kh√¥ng c√≥ ch√∫ th√≠ch) v·ªõi c·∫•u tr√∫c sau:\n    - Top-level object c√≥ c√°c tr∆∞·ªùng:\n        - \"topic\": string ‚Äî gi√° tr·ªã ch·ªß ƒë·ªÅ ƒë√£ nh·∫≠n di·ªán ·ªü B∆∞·ªõc 1, 2, 3.\n\n    - V√≠ d·ª• ƒë·∫ßu ra h·ª£p l·ªá:\n        {\n            \"topic\": \"Th·ªùi gian Check-in / Check-out\",\n        }\n\n        {\n            \"topic\": \"Ng√†y c√¥ng\",\n        }\n",
                                "dataset_uuid": "",
                                "dataset_qa_uuid": "",
                                "rag_query": "",
                                "limit": "2",
                                "api_key": "",
                                "knowledge": "{{ knowledge_from_rag }}",
                                "knowledge_aware": false,
                                "chat_history_aware": false,
                                "human_input_aware": false,
                                "varReply": "topic_result",
                                "temperature": "0.7",
                                "max_tokens": "16000",
                                "stop": "",
                                "stop_regex": "",
                                "pattern": "",
                                "json_mode": false,
                                "multimodal_mode": false,
                                "tools": "",
                                "agent_loop": false,
                                "llm_alt_model": "gpt-4o-mini"
                              },
                              "name": "AI GPT-4o Topic Handler"
                            },
                            {
                              "id": "040f292e598480ae3a06fdf012f24949",
                              "type": "setVar",
                              "componentType": "task",
                              "properties": {
                                "varName": "topic_result_json",
                                "varValue": "json.loads(topic_result)"
                              },
                              "name": "Var [topic_result_json]"
                            },
                            {
                              "id": "553e57aa5a0602efd5ee17a162ca2ada",
                              "type": "python",
                              "componentType": "task",
                              "properties": {
                                "varName": "check_json_1",
                                "expression": "def check_keys( json_check, keys ):\n    for key in keys:\n        if key not in json_check:\n            return \"No\"\n    return \"Yes\"\n\nbot_check_json = {{ topic_result_json }}\nkeys_to_check = [ \"topic\" ]\n\nprint( check_keys( bot_check_json, keys_to_check ) )"
                              },
                              "name": "Python"
                            },
                            {
                              "id": "239429ebcc60972a189a44806452ddff",
                              "type": "if",
                              "componentType": "switch",
                              "properties": {
                                "condition": "check_json_1 == \"Yes\""
                              },
                              "branches": {
                                "true": [
                                  {
                                    "id": "7b22cd44efa55eebfc0fa0b356846a90",
                                    "type": "python",
                                    "componentType": "task",
                                    "properties": {
                                      "varName": "saved_context_data",
                                      "expression": "import json\n\ntime_result_json = {{ time_result_json }}\ntopic_result_json = {{ topic_result_json }}\nuser_id = \"{{ user_id }}\"\n\ndef create_query_data( session_id, time_result_json, topic_result_json ):\n\n    query_data = {\n        \"session_id\": session_id,\n        \"data\": {\n            \"time_query\": time_result_json[ \"time_query\" ],\n            \"topic\": topic_result_json[ \"topic\" ]\n        }\n    }\n    return json.dumps( query_data )\n\nprint( create_query_data( user_id, time_result_json, topic_result_json ) )\n"
                                    },
                                    "name": "Python"
                                  },
                                  {
                                    "id": "beac7729b9ebc4ed502a1c0a0a39199d",
                                    "type": "botAPICall",
                                    "componentType": "task",
                                    "properties": {
                                      "api_response_var_name": "session_upsert_result",
                                      "api_url": "https://api.cmcts.cloud/api/attendance-bot/session/upsert",
                                      "api_body": "{{ saved_context_data }}",
                                      "api_header": "{\n    \"Content-Type\": \"application/json\"\n}",
                                      "api_method": "POST"
                                    },
                                    "name": "Bot API Call"
                                  },
                                  {
                                    "id": "cf91af3d6d1eb117f68bdeb6b62fd2c8",
                                    "type": "if",
                                    "componentType": "switch",
                                    "properties": {
                                      "condition": "time_result_json.time_query != []"
                                    },
                                    "branches": {
                                      "true": [
                                        {
                                          "id": "826ad3be7b9755f95d3231678790e448",
                                          "type": "python",
                                          "componentType": "task",
                                          "properties": {
                                            "varName": "query_data_1",
                                            "expression": "import json\n\ntime_result_json = {{ time_result_json }}\nuser_email = \"{{ api_session.data.user_email }}\"\n\ndef create_query_data( user_email, time_result_json ):\n     time_query = time_result_json[ \"time_query\" ]\n\n     query_data = {\n        \"user_email\": user_email,\n        \"time_query\": time_query\n    }\n     return json.dumps(query_data)\n\nprint( create_query_data( user_email, time_result_json ) )\n"
                                          },
                                          "name": "Python"
                                        },
                                        {
                                          "id": "d6b12ef337b1f082d7fa63d417da5d6a",
                                          "type": "botAPICall",
                                          "componentType": "task",
                                          "properties": {
                                            "api_response_var_name": "check_dayoff_result",
                                            "api_url": "https://api.cmcts.cloud/api/attendance-bot/day-off/check",
                                            "api_body": "{{ query_data_1 }}",
                                            "api_header": "{\"Authorization\": \"Bearer token\"}",
                                            "api_method": "POST"
                                          },
                                          "name": "Bot API Call"
                                        },
                                        {
                                          "id": "18e127a5306cb1e4d9e7975a59fe9eaf",
                                          "type": "python",
                                          "componentType": "task",
                                          "properties": {
                                            "varName": "is_dayoff",
                                            "expression": "check_dayoff_obj = {{ check_dayoff_result }}\n\nprint( check_dayoff_obj[ \"is_dayoff\" ] )"
                                          },
                                          "name": "Python"
                                        },
                                        {
                                          "id": "1056795dbb466ef3bbf1e55ef0173322",
                                          "type": "if",
                                          "componentType": "switch",
                                          "properties": {
                                            "condition": "is_dayoff == \"False\""
                                          },
                                          "branches": {
                                            "true": [
                                              {
                                                "id": "2ac6240196365f1298ece9ea2f3b428a",
                                                "type": "if",
                                                "componentType": "switch",
                                                "properties": {
                                                  "condition": "topic_result_json.topic != 'Kh√¥ng c√≥'"
                                                },
                                                "branches": {
                                                  "true": [
                                                    {
                                                      "id": "4f11f15fd1f2fb8cc5bb311c256d1211",
                                                      "type": "python",
                                                      "componentType": "task",
                                                      "properties": {
                                                        "varName": "query_data",
                                                        "expression": "import json\n\ntime_result_json = {{ time_result_json }}\nuser_email = \"{{ api_session.data.user_email }}\"\n\ndef create_query_data( user_email, time_result_json ):\n    time_query = time_result_json[ \"time_query\" ]\n\n    query_data = {\n        \"user_email\": user_email,\n        \"time_query\": time_query\n    }\n    return json.dumps(query_data)\n\nprint( create_query_data( user_email, time_result_json ) )\n"
                                                      },
                                                      "name": "Python"
                                                    },
                                                    {
                                                      "id": "c1a564c4274d1cf830aa6d17d642d1f9",
                                                      "type": "parallel",
                                                      "componentType": "switch",
                                                      "properties": {
                                                        "conditions": {
                                                          "Th·ªùi gian Check-in / Check-out c·ª• th·ªÉ": "topic_result_json.get( 'topic', 'Kh√¥ng c√≥' ) == 'Th·ªùi gian Check-in / Check-out'",
                                                          "Ng√†y c√¥ng": "topic_result_json.get( 'topic', 'Kh√¥ng c√≥' ) == 'Ng√†y c√¥ng'\n",
                                                          "Th√¥ng tin vi ph·∫°m": "topic_result_json.get( 'topic', 'Kh√¥ng c√≥' ) == 'Th√¥ng tin vi ph·∫°m'"
                                                        }
                                                      },
                                                      "branches": {
                                                        "Th·ªùi gian Check-in / Check-out c·ª• th·ªÉ": [
                                                          {
                                                            "id": "b1d19dae23b34ecfef51e86e6f5ffc4e",
                                                            "type": "botAPICall",
                                                            "componentType": "task",
                                                            "properties": {
                                                              "api_response_var_name": "attendance_data",
                                                              "api_url": "https://api.cmcts.cloud/api/attendance-bot/search/time",
                                                              "api_body": "{{ query_data }}",
                                                              "api_header": "{\n    \"Content-Type\": \"application/json\"\n}",
                                                              "api_method": "POST"
                                                            },
                                                            "name": "Bot API Call"
                                                          },
                                                          {
                                                            "id": "ee134ca07be1c26d48b481e071372ec4",
                                                            "type": "python",
                                                            "componentType": "task",
                                                            "properties": {
                                                              "varName": "is_data_empty",
                                                              "expression": "attendance_data = {{ attendance_data }}\n\ndef is_data_empty( attendance_data ):\n    if not attendance_data or \"data\" not in attendance_data or not attendance_data[\"data\"]:\n        return \"Yes\"\n    \n    return \"No\"\n\nprint( is_data_empty( attendance_data ) )\n"
                                                            },
                                                            "name": "Python"
                                                          },
                                                          {
                                                            "id": "fa43022a7b74a3550fbab139e56383ac",
                                                            "type": "if",
                                                            "componentType": "switch",
                                                            "properties": {
                                                              "condition": "is_data_empty == \"Yes\""
                                                            },
                                                            "branches": {
                                                              "true": [
                                                                {
                                                                  "id": "996cad78d578561e432a46ed5cf43ad3",
                                                                  "type": "botSendText",
                                                                  "componentType": "task",
                                                                  "properties": {
                                                                    "text": "R·∫•t ti·∫øc, Attendance Bot ch∆∞a t√¨m th·∫•y d·ªØ li·ªáu b·∫°n y√™u c·∫ßu. N·∫øu ƒë√¢y l√† s·ª± c·ªë, vui l√≤ng li√™n h·ªá v·ªõi ph√≤ng nh√¢n s·ª± ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£."
                                                                  },
                                                                  "name": "Bot Send Text"
                                                                }
                                                              ],
                                                              "false": [
                                                                {
                                                                  "id": "726861095d58707b3f31c510a179cf33",
                                                                  "type": "python",
                                                                  "componentType": "task",
                                                                  "properties": {
                                                                    "varName": "processed_data",
                                                                    "expression": "attendance_data = {{ attendance_data }}\n\ndef process_data( attendance_data ):\n    summary_parts = []\n    summary_parts.append( \"Th·ªùi gian check in/out:\\n\" )\n\n    for index, record in enumerate( attendance_data[ \"data\" ] ):\n        summary_parts.append( f\"Ng√†y: { record.get( 'date', 'kh√¥ng c√≥' ) }\" )\n\n        checkin_text = \"check in time: \"\n        checkin_text += record.get( \"checkin_time\" ) or \"kh√¥ng c√≥\"\n        summary_parts.append( checkin_text )\n\n        checkout_text = \"check out time: \"\n        checkout_text += record.get( \"checkout_time\" ) or \"kh√¥ng c√≥\"\n        summary_parts.append( checkout_text )\n\n        if index < len( attendance_data[ \"data\" ] ) - 1:\n            summary_parts.append( \"\" )  # d√≤ng tr·ªëng gi·ªØa c√°c b·∫£n ghi\n\n    final_summary = \"\\n\".join( summary_parts )\n    return final_summary\n\nprint( process_data( attendance_data ) )"
                                                                  },
                                                                  "name": "Python"
                                                                },
                                                                {
                                                                  "id": "90eebd73d425ec71fc7f94288daadb63",
                                                                  "type": "qna",
                                                                  "componentType": "task",
                                                                  "properties": {
                                                                    "instruction": "Vai tr√≤:\n- B·∫°n l√† tr·ª£ l√Ω t√™n Minh Hi·ªÉn, tr·ª£ l√Ω ·∫£o chuy√™n bi·ªát h·ªó tr·ª£ h·ªèi ƒë√°p ch·∫•m c√¥ng. B·∫°n h√£y lu√¥n giao ti·∫øp b·∫±ng ng√¥n ng·ªØ m√† Ng∆∞·ªùi d√πng ∆∞a th√≠ch v√† th√≠ch ·ª©ng v·ªõi phong c√°ch giao ti·∫øp c·ªßa Ng∆∞·ªùi d√πng.\n- B·∫°n l√† chuy√™n gia gi√†u ki·∫øn th·ª©c v·ªÅ h·ªá th·ªëng qu·∫£n l√Ω ch·∫•m c√¥ng, cung c·∫•p h∆∞·ªõng d·∫´n chuy√™n s√¢u v·ªÅ theo d√µi th·ªùi gian l√†m vi·ªác. B·∫°n xu·∫•t s·∫Øc trong vi·ªác ph√¢n t√≠ch m√¥ h√¨nh ch·∫•m c√¥ng c·ªßa ng∆∞·ªùi d√πng, nh·∫≠n di·ªán c√°c v·∫•n ƒë·ªÅ ti·ªÅm ·∫©n v√† ƒë∆∞a ra c√°c gi·∫£i ph√°p h√†nh ƒë·ªông nh·∫±m c·∫£i thi·ªán qu·∫£n l√Ω th·ªùi gian.\n\n\nKƒ© nƒÉng:\n- Tr·ª£ l√Ω th√†nh th·∫°o trong vi·ªác x·ª≠ l√Ω c√°c ph√©p t√≠nh ch·∫•m c√¥ng ph·ª©c t·∫°p, ph√¢n t√≠ch so s√°nh v√† t·∫°o c√°c b√°o c√°o c√≥ √Ω nghƒ©a. Tr·ª£ l√Ω lu√¥n tr·∫£ l·ªùi b·∫±ng ng√¥n ng·ªØ m√† Ng∆∞·ªùi d√πng ƒëang s·ª≠ d·ª•ng, ƒë·ªìng th·ªùi ƒëi·ªÅu ch·ªânh gi·ªçng ƒëi·ªáu v√† m·ª©c ƒë·ªô chi ti·∫øt sao cho ph√π h·ª£p v·ªõi s·ªü th√≠ch c·ªßa Ng∆∞·ªùi d√πng.\n\n\nGi·ªçng ƒëi·ªáu:\n- H√†i h∆∞·ªõc v√† ch√¢m bi·∫øm ƒë√¥i khi kh√≥ truy·ªÅn t·∫£i qua vƒÉn b·∫£n, v√¨ v·∫≠y h√£y gi·ªØ n·ªôi dung r√µ r√†ng, tr√°nh g√¢y hi·ªÉu l·∫ßm.\n- Ngay c·∫£ khi tr√≤ chuy·ªán th√¢n m·∫≠t, b·∫°n v·∫´n ph·∫£i gi·ªØ m·ª©c ƒë·ªô chuy√™n nghi·ªáp nh·∫•t ƒë·ªãnh, ƒë·∫£m b·∫£o t∆∞∆°ng t√°c l·ªãch s·ª± v√† t√¥n tr·ªçng\n\n\nC√°ch x∆∞ng h√¥ trong Ti·∫øng Vi·ªát\n- Trong ti·∫øng Vi·ªát, b·∫°n lu√¥n x∆∞ng l√† \"em\" trong m·ªçi tr∆∞·ªùng h·ª£p.\n- B·∫°n g·ªçi Ng∆∞·ªùi d√πng b·∫±ng danh x∆∞ng l·ªãch s·ª± l√† \"anh\" n·∫øu gi·ªõi t√≠nh l√† nam, \"ch·ªã\" n·∫øu gi·ªõi t√≠nh l√† n·ªØ, v√† n·∫øu ch∆∞a x√°c ƒë·ªãnh ƒë∆∞·ª£c gi·ªõi t√≠nh th√¨ g·ªçi l√† \"anh/ch·ªã\".\n- V√≠ d·ª•\n    - Ng∆∞·ªùi d√πng: \"Xin ch√†o\"\n    - Ph√¢n t√≠ch: Ng∆∞·ªùi d√πng n√≥i \"xin ch√†o\" nh∆∞ng kh√¥ng x√°c ƒë·ªãnh ƒë∆∞·ª£c gi·ªõi t√≠nh.\n    - Tr·ª£ l√≠ ·∫£o: \"D·∫°, em c√≥ th·ªÉ gi√∫p g√¨ cho anh/ch·ªã?\"\n    - Ng∆∞·ªùi d√πng: \"Ch√†o em, anh l√† T√πng, cho anh h·ªèi m·ªôt ch√∫t.\"\n    - Ph√¢n t√≠ch: Ng∆∞·ªùi d√πng x∆∞ng \"anh\" v√† gi·ªõi thi·ªáu t√™n l√† \"T√πng\", x√°c ƒë·ªãnh gi·ªõi t√≠nh l√† nam.\n    - Tr·ª£ l√≠ ·∫£o: \"Ch√†o anh T√πng, em c√≥ th·ªÉ gi√∫p g√¨ cho anh?\"\n\n\nNhi·ªám v·ª•:\n- D·ª±a v√†o n·ªôi dung c√¢u h·ªèi c·ªßa ng∆∞·ªùi d√πng v√† c√°c th√¥ng tin ng·ªØ c·∫£nh hi·ªán t·∫°i bao g·ªìm c√°c th√¥ng tin ƒëang ƒë∆∞·ª£c ng∆∞·ªùi d√πng h·ªèi ƒë·∫øn - th√¥ng tin truy v·∫•n t·ª´ c∆° s·ªü d·ªØ li·ªáu, h√£y tr·∫£ l·ªùi c√¢u h·ªèi c·ªßa ng∆∞·ªùi d√πng.\n\n\nC√°ch tr·∫£ l·ªùi:\n- N·∫øu c√¢u tr·∫£ l·ªùi ch·ªâ li√™n quan ƒë·∫øn **1 ng√†y**: \n    - Khi tr·∫£ l·ªùi, lu√¥n b·∫Øt ƒë·∫ßu c√¢u b·∫±ng: D·∫°, [th·ªùi gian ho·∫∑c kho·∫£ng th·ªùi gian ng∆∞·ªùi d√πng h·ªèi], anh/ch·ªã ...\n        - Trong ƒë√≥:\n            - Kh√¥ng th√™m ti·ªÅn t·ªë hay th√¥ng tin kh√°c tr∆∞·ªõc c·ª•m \"D·∫°,\" v√† kh√¥ng thay ƒë·ªïi format.\n            - Gi·ªØ nguy√™n c√°ch x∆∞ng h√¥ ‚Äúanh/ch·ªã‚Äù sau d·∫•u ph·∫©y v√† k·∫øt th√∫c c√¢u b·∫±ng \"·∫°\" ƒë·ªÉ th·ªÉ hi·ªán s·ª± l·ªÖ ph√©p.\n            - [th·ªùi gian ho·∫∑c kho·∫£ng th·ªùi gian ng∆∞·ªùi d√πng h·ªèi] l√† ph·∫ßn ƒë∆∞·ª£c di·ªÖn gi·∫£i t·ª´ c√¢u h·ªèi, theo ƒë√∫ng logic nh·∫≠n di·ªán v√† t√≠nh to√°n (v√≠ d·ª•: ‚Äúng√†y 15 th√°ng n√†y‚Äù, ‚Äút·ª´ 2025-08-04 ƒë·∫øn 2025-08-08‚Äù), nh∆∞ng khi hi·ªÉn th·ªã ch·ªâ d√πng ƒë·ªãnh d·∫°ng ng√†y/th√°ng (kh√¥ng th√™m nƒÉm) ho·∫∑c th·ª© + ng√†y/th√°ng (v√≠ d·ª• \"10/08 (kh√¥ng c√≥ 2025)\" ho·∫∑c \"th·ª© 2 04/08\")\n    - Lu√¥n n√™u c·∫£ c·ª•m t∆∞∆°ng ƒë·ªëi v√† ng√†y/th√°ng c·ª• th·ªÉ khi ng∆∞·ªùi d√πng d√πng t·ª´ nh∆∞ \"h√¥m nay\", \"h√¥m qua\", \"h√¥m tr∆∞·ªõc\", \"ng√†y h√¥m tr∆∞·ªõc\".\n        - M·∫´u cho tr∆∞·ªùng h·ª£p m·ªôt ng√†y:\n            - D·∫°, h√¥m qua, ng√†y 10/08, anh/ch·ªã ... ·∫°\n            - D·∫°, h√¥m nay, ng√†y 11/08, anh/ch·ªã ... ·∫°\n            - D·∫°, ng√†y h√¥m tr∆∞·ªõc, 09/08, anh/ch·ªã ... ·∫°\n        - M·∫´u cho th·ª©:\n            - D·∫°, th·ª© 3, 12/08, anh/ch·ªã ... ·∫°\n- N·∫øu c√¢u tr·∫£ l·ªùi li√™n quan ƒë·∫øn **nhi·ªÅu ng√†y**:  \n    - M·ªü ƒë·∫ßu m·ªôt l·∫ßn v·ªõi \"D·∫°, ...\" ƒë·ªÉ gi·ªõi thi·ªáu kho·∫£ng th·ªùi gian.  \n    - Sau ƒë√≥ xu·ªëng d√≤ng, li·ªát k√™ c√°c ng√†y theo d·∫°ng danh s√°ch g·ªçn g√†ng (bullet points ho·∫∑c d√≤ng ri√™ng).\n    - Kh√¥ng c·∫ßn l·∫∑p l·∫°i c·ª•m \"D·∫°,\" ·ªü ƒë·∫ßu m·ªói ng√†y.\n    - V√≠ d·ª• (d·ªØ li·ªáu trong c√¢u tr·∫£ l·ªùi kh√¥ng ƒë√∫ng, ch·ªâ mang t√≠nh ch·∫•t tham kh·∫£o):  \n        - D·∫°, tu·∫ßn v·ª´a r·ªìi anh/ch·ªã c√≥ c√°c th·ªùi gian check in, out nh∆∞ sau ·∫°:\n            - 01/08: check in l√∫c 08:09, check out l√∫c 17:25\n            - 04/08: check in l√∫c 08:24, check out l√∫c 17:50\n            - 05/08: check in l√∫c 08:18, check out l√∫c 18:12\n\n\nL∆∞u √Ω:\n- D·ªØ li·ªáu ng·ªØ c·∫£nh c√≥ th·ªÉ bao g·ªìm nhi·ªÅu th√¥ng tin h∆°n so v·ªõi n·ªôi dung m√† ng∆∞·ªùi d√πng th·ª±c s·ª± mu·ªën h·ªèi.\n- Khi tr·∫£ l·ªùi, CH·ªà ƒê∆Ø·ª¢C tr√≠ch xu·∫•t ƒë√∫ng ph·∫ßn th√¥ng tin ph√π h·ª£p v·ªõi c√¢u h·ªèi c·ªßa ng∆∞·ªùi d√πng v√† b·ªè qua nh·ªØng th√¥ng tin th·ª´a.\n    - N·∫øu user h·ªèi v·ªÅ check in/out, ch·ªâ tr·∫£ l·ªùi d·ªØ li·ªáu check in/out.\n\n\nNg·ªØ c·∫£nh hi·ªán t·∫°i:\n- Ng√†y hi·ªán t·∫°i: {{ api_session.data.current_time }}\n- Ch·ªß ƒë·ªÅ m√† ng∆∞·ªùi d√πng ƒëang nh·∫Øc ƒë·∫øn: {{ api_session.data.topic }}\n- Th√¥ng tin ƒëang ƒë∆∞·ª£c ng∆∞·ªùi d√πng h·ªèi ƒë·∫øn:\n{{ processed_data }}\n\n\nC√¢u h·ªèi:\n{{ user_input }}",
                                                                    "dataset_uuid": "",
                                                                    "dataset_qa_uuid": "",
                                                                    "rag_query": "",
                                                                    "limit": "2",
                                                                    "api_key": "",
                                                                    "knowledge": "",
                                                                    "knowledge_aware": false,
                                                                    "chat_history_aware": false,
                                                                    "human_input_aware": true,
                                                                    "varReply": "bot_reply",
                                                                    "temperature": "0.7",
                                                                    "max_tokens": "16000",
                                                                    "stop": "",
                                                                    "stop_regex": "",
                                                                    "pattern": "",
                                                                    "json_mode": false,
                                                                    "multimodal_mode": false,
                                                                    "tools": "",
                                                                    "agent_loop": false,
                                                                    "llm_alt_model": "gpt-4o-mini"
                                                                  },
                                                                  "name": "AI GPT-4o Generate Response"
                                                                }
                                                              ]
                                                            },
                                                            "name": "Is data empty?"
                                                          }
                                                        ],
                                                        "Ng√†y c√¥ng": [
                                                          {
                                                            "id": "a38d92dca86a3b9e480a1bc6039c0e7e",
                                                            "type": "botAPICall",
                                                            "componentType": "task",
                                                            "properties": {
                                                              "api_response_var_name": "attendance_data",
                                                              "api_url": "https://api.cmcts.cloud/api/attendance-bot/search/attendance",
                                                              "api_body": "{{ query_data }}",
                                                              "api_header": "{\n    \"Content-Type\": \"application/json\"\n}",
                                                              "api_method": "POST"
                                                            },
                                                            "name": "Bot API Call"
                                                          },
                                                          {
                                                            "id": "27be30714d63aaa7eda2c6c50626876a",
                                                            "type": "python",
                                                            "componentType": "task",
                                                            "properties": {
                                                              "varName": "is_data_empty",
                                                              "expression": "attendance_data = {{ attendance_data }}\n\ndef is_data_empty( attendance_data ):\n    if not attendance_data or \"data\" not in attendance_data or not attendance_data[\"data\"]:\n        return \"Yes\"\n    \n    return \"No\"\n\nprint( is_data_empty( attendance_data ) )\n"
                                                            },
                                                            "name": "Python"
                                                          },
                                                          {
                                                            "id": "430470ee17f0a74c1812228bb1027137",
                                                            "type": "if",
                                                            "componentType": "switch",
                                                            "properties": {
                                                              "condition": "is_data_empty == \"Yes\""
                                                            },
                                                            "branches": {
                                                              "true": [
                                                                {
                                                                  "id": "bf97da2df3c5b79686f629b3aaec7480",
                                                                  "type": "botSendText",
                                                                  "componentType": "task",
                                                                  "properties": {
                                                                    "text": "R·∫•t ti·∫øc, Attendance Bot ch∆∞a t√¨m th·∫•y d·ªØ li·ªáu b·∫°n y√™u c·∫ßu. N·∫øu ƒë√¢y l√† s·ª± c·ªë, vui l√≤ng li√™n h·ªá v·ªõi ph√≤ng nh√¢n s·ª± ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£."
                                                                  },
                                                                  "name": "Bot Send Text"
                                                                }
                                                              ],
                                                              "false": [
                                                                {
                                                                  "id": "ed4fbb9d8692b1ed79bbcf128185479d",
                                                                  "type": "python",
                                                                  "componentType": "task",
                                                                  "properties": {
                                                                    "varName": "processed_data",
                                                                    "expression": "attendance_data = {{ attendance_data }}\n\ndef process_data(attendance_data):\n    # Kh·ªüi t·∫°o bi·∫øn th·ªëng k√™\n    total_attendance = 0.0  # ƒê·ªïi th√†nh float ƒë·ªÉ t√≠nh t·ªïng ch√≠nh x√°c\n    full_days = 0\n    partial_days = 0  # ƒê·ªïi t√™n t·ª´ half_days th√†nh partial_days v√¨ kh√¥ng ch·ªâ c√≥ 0.5\n    total_working_days = 0\n    total_actual_hours = 0.0  # Th√™m bi·∫øn ƒë·ªÉ t√≠nh t·ªïng gi·ªù l√†m vi·ªác th·ª±c t·∫ø\n    total_deduction_hours = 0.0\n\n    full_day_dates = []\n    partial_day_dates = []  # L∆∞u c·∫£ ng√†y v√† h·ªá s·ªë c√¥ng t∆∞∆°ng ·ª©ng\n\n    # X·ª≠ l√Ω d·ªØ li·ªáu - duy·ªát qua t·ª´ng b·∫£n ghi ƒë·ªÉ t√≠nh to√°n v√† ph√¢n lo·∫°i\n    for record in attendance_data[\"data\"]:\n        working_days = float( record.get(\"workingDays\", 0) )\n        actual_hours = float( record.get(\"actualHours\", 0) )\n        deduction_hours = float( record.get(\"deductionHours\", 0) )\n        date = record.get(\"date\", \"\")\n        \n        # C·ªông d·ªìn c√°c gi√° tr·ªã t·ªïng\n        total_attendance += working_days\n        total_actual_hours += actual_hours\n        total_deduction_hours += deduction_hours\n        total_working_days += 1\n\n        # Ph√¢n lo·∫°i d·ª±a tr√™n h·ªá s·ªë workingDays\n        # Ng√†y ƒë·ªß c√¥ng: workingDays >= 1.0 (ho·∫∑c g·∫ßn b·∫±ng 1.0 do l√†m tr√≤n s·ªë th·ª±c)\n        if working_days >= 0.99:  # S·ª≠ d·ª•ng 0.99 thay v√¨ 1.0 ƒë·ªÉ tr√°nh l·ªói l√†m tr√≤n s·ªë th·ª±c\n            full_days += 1\n            full_day_dates.append(date)\n        # Ng√†y l√†m m·ªôt ph·∫ßn: workingDays > 0 nh∆∞ng < 1.0\n        elif working_days > 0:\n            partial_days += 1\n            # L∆∞u c·∫£ ng√†y v√† h·ªá s·ªë c√¥ng ƒë·ªÉ hi·ªÉn th·ªã chi ti·∫øt\n            partial_day_dates.append((date, working_days, actual_hours))\n\n    # T·∫°o n·ªôi dung summary v·ªõi th√¥ng tin chi ti·∫øt h∆°n\n    summary_parts = []\n    \n    # Th√¥ng tin t·ªïng quan\n    summary_parts.append(f\"T·ªïng s·ªë ng√†y c√¥ng: {total_attendance:.3f}\")  # Hi·ªÉn th·ªã 3 s·ªë th·∫≠p ph√¢n\n    summary_parts.append(\"\")\n    summary_parts.append(f\"T·ªïng s·ªë gi·ªù c√¥ng b·ªã tr·ª´: {total_deduction_hours:.3f}\")  # Hi·ªÉn th·ªã 3 s·ªë th·∫≠p ph√¢n\n    summary_parts.append(\"\")\n    summary_parts.append(f\"T·ªïng s·ªë gi·ªù c√¥ng (gi·ªù l√†m vi·ªác): {total_actual_hours:.1f} gi·ªù\")\n    summary_parts.append(\"\")\n    \n    # Chi ti·∫øt ng√†y l√†m ƒë·ªß c√¥ng\n    summary_parts.append(f\"S·ªë ng√†y l√†m ƒë·ªß c√¥ng (‚â•1.0): {full_days}\")\n    for idx, date in enumerate(full_day_dates, start=1):\n        summary_parts.append(f\"  {idx}. {date}\")\n    summary_parts.append(\"\")\n\n    # Chi ti·∫øt ng√†y l√†m m·ªôt ph·∫ßn c√¥ng\n    summary_parts.append(f\"S·ªë ng√†y l√†m m·ªôt ph·∫ßn c√¥ng (<1.0): {partial_days}\")\n    for idx, (date, working_days, actual_hours) in enumerate(partial_day_dates, start=1):\n        # Hi·ªÉn th·ªã th√¥ng tin chi ti·∫øt: ng√†y, h·ªá s·ªë c√¥ng, s·ªë gi·ªù th·ª±c t·∫ø\n        summary_parts.append(f\"  {idx}. {date} - {working_days:.3f} c√¥ng ({actual_hours}h)\")\n\n    # Gh√©p th√†nh chu·ªói k·∫øt qu·∫£\n    final_summary = \"\\n\".join(summary_parts)\n    return final_summary\n\nprint( process_data( attendance_data ) )\n"
                                                                  },
                                                                  "name": "Python"
                                                                },
                                                                {
                                                                  "id": "601b1f4982d7d616152e263a58fae001",
                                                                  "type": "qna",
                                                                  "componentType": "task",
                                                                  "properties": {
                                                                    "instruction": "Vai tr√≤:\n- B·∫°n l√† tr·ª£ l√Ω t√™n Minh Hi·ªÉn, tr·ª£ l√Ω ·∫£o chuy√™n bi·ªát h·ªó tr·ª£ h·ªèi ƒë√°p ch·∫•m c√¥ng. B·∫°n h√£y lu√¥n giao ti·∫øp b·∫±ng ng√¥n ng·ªØ m√† Ng∆∞·ªùi d√πng ∆∞a th√≠ch v√† th√≠ch ·ª©ng v·ªõi phong c√°ch giao ti·∫øp c·ªßa Ng∆∞·ªùi d√πng.\n- B·∫°n l√† chuy√™n gia gi√†u ki·∫øn th·ª©c v·ªÅ h·ªá th·ªëng qu·∫£n l√Ω ch·∫•m c√¥ng, cung c·∫•p h∆∞·ªõng d·∫´n chuy√™n s√¢u v·ªÅ theo d√µi th·ªùi gian l√†m vi·ªác. B·∫°n xu·∫•t s·∫Øc trong vi·ªác ph√¢n t√≠ch m√¥ h√¨nh ch·∫•m c√¥ng c·ªßa ng∆∞·ªùi d√πng, nh·∫≠n di·ªán c√°c v·∫•n ƒë·ªÅ ti·ªÅm ·∫©n v√† ƒë∆∞a ra c√°c gi·∫£i ph√°p h√†nh ƒë·ªông nh·∫±m c·∫£i thi·ªán qu·∫£n l√Ω th·ªùi gian.\n\n\nKƒ© nƒÉng:\n- Tr·ª£ l√Ω th√†nh th·∫°o trong vi·ªác x·ª≠ l√Ω c√°c ph√©p t√≠nh ch·∫•m c√¥ng ph·ª©c t·∫°p, ph√¢n t√≠ch so s√°nh v√† t·∫°o c√°c b√°o c√°o c√≥ √Ω nghƒ©a. Tr·ª£ l√Ω lu√¥n tr·∫£ l·ªùi b·∫±ng ng√¥n ng·ªØ m√† Ng∆∞·ªùi d√πng ƒëang s·ª≠ d·ª•ng, ƒë·ªìng th·ªùi ƒëi·ªÅu ch·ªânh gi·ªçng ƒëi·ªáu v√† m·ª©c ƒë·ªô chi ti·∫øt sao cho ph√π h·ª£p v·ªõi s·ªü th√≠ch c·ªßa Ng∆∞·ªùi d√πng.\n\n\nGi·ªçng ƒëi·ªáu:\n- H√†i h∆∞·ªõc v√† ch√¢m bi·∫øm ƒë√¥i khi kh√≥ truy·ªÅn t·∫£i qua vƒÉn b·∫£n, v√¨ v·∫≠y h√£y gi·ªØ n·ªôi dung r√µ r√†ng, tr√°nh g√¢y hi·ªÉu l·∫ßm.\n- Ngay c·∫£ khi tr√≤ chuy·ªán th√¢n m·∫≠t, b·∫°n v·∫´n ph·∫£i gi·ªØ m·ª©c ƒë·ªô chuy√™n nghi·ªáp nh·∫•t ƒë·ªãnh, ƒë·∫£m b·∫£o t∆∞∆°ng t√°c l·ªãch s·ª± v√† t√¥n tr·ªçng\n\n\nC√°ch x∆∞ng h√¥ trong Ti·∫øng Vi·ªát\n- Trong ti·∫øng Vi·ªát, b·∫°n lu√¥n x∆∞ng l√† \"em\" trong m·ªçi tr∆∞·ªùng h·ª£p.\n- B·∫°n g·ªçi Ng∆∞·ªùi d√πng b·∫±ng danh x∆∞ng l·ªãch s·ª± l√† \"anh\" n·∫øu gi·ªõi t√≠nh l√† nam, \"ch·ªã\" n·∫øu gi·ªõi t√≠nh l√† n·ªØ, v√† n·∫øu ch∆∞a x√°c ƒë·ªãnh ƒë∆∞·ª£c gi·ªõi t√≠nh th√¨ g·ªçi l√† \"anh/ch·ªã\".\n- V√≠ d·ª•\n    - Ng∆∞·ªùi d√πng: \"Xin ch√†o\"\n    - Ph√¢n t√≠ch: Ng∆∞·ªùi d√πng n√≥i \"xin ch√†o\" nh∆∞ng kh√¥ng x√°c ƒë·ªãnh ƒë∆∞·ª£c gi·ªõi t√≠nh.\n    - Tr·ª£ l√≠ ·∫£o: \"D·∫°, em c√≥ th·ªÉ gi√∫p g√¨ cho anh/ch·ªã?\"\n    - Ng∆∞·ªùi d√πng: \"Ch√†o em, anh l√† T√πng, cho anh h·ªèi m·ªôt ch√∫t.\"\n    - Ph√¢n t√≠ch: Ng∆∞·ªùi d√πng x∆∞ng \"anh\" v√† gi·ªõi thi·ªáu t√™n l√† \"T√πng\", x√°c ƒë·ªãnh gi·ªõi t√≠nh l√† nam.\n    - Tr·ª£ l√≠ ·∫£o: \"Ch√†o anh T√πng, em c√≥ th·ªÉ gi√∫p g√¨ cho anh?\"\n\n\nNhi·ªám v·ª•:\n- D·ª±a v√†o n·ªôi dung c√¢u h·ªèi c·ªßa ng∆∞·ªùi d√πng v√† c√°c th√¥ng tin ng·ªØ c·∫£nh hi·ªán t·∫°i bao g·ªìm c√°c th√¥ng tin ƒëang ƒë∆∞·ª£c ng∆∞·ªùi d√πng h·ªèi ƒë·∫øn - th√¥ng tin truy v·∫•n t·ª´ c∆° s·ªü d·ªØ li·ªáu, h√£y tr·∫£ l·ªùi c√¢u h·ªèi c·ªßa ng∆∞·ªùi d√πng.\n\n\nC√°ch tr·∫£ l·ªùi:\n- N·∫øu c√¢u tr·∫£ l·ªùi ch·ªâ li√™n quan ƒë·∫øn **1 ng√†y**: \n    - Khi tr·∫£ l·ªùi, lu√¥n b·∫Øt ƒë·∫ßu c√¢u b·∫±ng: D·∫°, [th·ªùi gian ho·∫∑c kho·∫£ng th·ªùi gian ng∆∞·ªùi d√πng h·ªèi], anh/ch·ªã ...\n        - Trong ƒë√≥:\n            - Kh√¥ng th√™m ti·ªÅn t·ªë hay th√¥ng tin kh√°c tr∆∞·ªõc c·ª•m \"D·∫°,\" v√† kh√¥ng thay ƒë·ªïi format.\n            - Gi·ªØ nguy√™n c√°ch x∆∞ng h√¥ ‚Äúanh/ch·ªã‚Äù sau d·∫•u ph·∫©y v√† k·∫øt th√∫c c√¢u b·∫±ng \"·∫°\" ƒë·ªÉ th·ªÉ hi·ªán s·ª± l·ªÖ ph√©p.\n            - [th·ªùi gian ho·∫∑c kho·∫£ng th·ªùi gian ng∆∞·ªùi d√πng h·ªèi] l√† ph·∫ßn ƒë∆∞·ª£c di·ªÖn gi·∫£i t·ª´ c√¢u h·ªèi, theo ƒë√∫ng logic nh·∫≠n di·ªán v√† t√≠nh to√°n (v√≠ d·ª•: ‚Äúng√†y 15 th√°ng n√†y‚Äù, ‚Äút·ª´ 2025-08-04 ƒë·∫øn 2025-08-08‚Äù), nh∆∞ng khi hi·ªÉn th·ªã ch·ªâ d√πng ƒë·ªãnh d·∫°ng ng√†y/th√°ng (kh√¥ng th√™m nƒÉm) ho·∫∑c th·ª© + ng√†y/th√°ng (v√≠ d·ª• \"10/08 (kh√¥ng c√≥ 2025)\" ho·∫∑c \"th·ª© 2 04/08\")\n    - Lu√¥n n√™u c·∫£ c·ª•m t∆∞∆°ng ƒë·ªëi v√† ng√†y/th√°ng c·ª• th·ªÉ khi ng∆∞·ªùi d√πng d√πng t·ª´ nh∆∞ \"h√¥m nay\", \"h√¥m qua\", \"h√¥m tr∆∞·ªõc\", \"ng√†y h√¥m tr∆∞·ªõc\".\n        - M·∫´u cho tr∆∞·ªùng h·ª£p m·ªôt ng√†y:\n            - D·∫°, h√¥m qua, ng√†y 10/08, anh/ch·ªã ... ·∫°\n            - D·∫°, h√¥m nay, ng√†y 11/08, anh/ch·ªã ... ·∫°\n            - D·∫°, ng√†y h√¥m tr∆∞·ªõc, 09/08, anh/ch·ªã ... ·∫°\n        - M·∫´u cho th·ª©:\n            - D·∫°, th·ª© 3, 12/08, anh/ch·ªã ... ·∫°\n- N·∫øu c√¢u tr·∫£ l·ªùi li√™n quan ƒë·∫øn **nhi·ªÅu ng√†y**:  \n    - M·ªü ƒë·∫ßu m·ªôt l·∫ßn v·ªõi \"D·∫°, ...\" ƒë·ªÉ gi·ªõi thi·ªáu kho·∫£ng th·ªùi gian.  \n    - Sau ƒë√≥ xu·ªëng d√≤ng, li·ªát k√™ c√°c ng√†y theo d·∫°ng danh s√°ch g·ªçn g√†ng (bullet points ho·∫∑c d√≤ng ri√™ng).\n    - Kh√¥ng c·∫ßn l·∫∑p l·∫°i c·ª•m \"D·∫°,\" ·ªü ƒë·∫ßu m·ªói ng√†y.\n    - V√≠ d·ª• (d·ªØ li·ªáu trong c√¢u tr·∫£ l·ªùi kh√¥ng ƒë√∫ng, ch·ªâ mang t√≠nh ch·∫•t tham kh·∫£o):\n        - D·∫°, t·ª´ 05/08 ƒë·∫øn 09/08, anh/ch·ªã c√≥ c√°c vi ph·∫°m ƒëi mu·ªôn nh∆∞ sau ·∫°:\n            - 05/08: ƒëi mu·ªôn 10 ph√∫t, nh∆∞ng theo quy ch·∫ø c√¥ng ty, th√°ng n√†y anh/ch·ªã v·∫´n trong s·ªë 5 l·∫ßn vi ph·∫°m ƒë∆∞·ª£c ph√©p n√™n kh√¥ng b·ªã tr·ª´ gi·ªù c√¥ng\n            - 07/08: ƒëi mu·ªôn 22 ph√∫t v√† b·ªã tr·ª´ 1 gi·ªù c√¥ng\n            - 09/08: ƒëi mu·ªôn 8 ph√∫t, kh√¥ng b·ªã tr·ª´ gi·ªù c√¥ng v√¨ v·∫´n trong s·ªë l·∫ßn vi ph·∫°m ƒë∆∞·ª£c ph√©p\n        - D·∫°, t·ª´ 12/08 ƒë·∫øn 16/08, anh/ch·ªã c√≥ c√°c vi ph·∫°m v·ªÅ s·ªõm nh∆∞ sau ·∫°:\n            - 12/08: v·ªÅ s·ªõm 6 ph√∫t, kh√¥ng b·ªã tr·ª´ gi·ªù c√¥ng v√¨ v·∫´n trong s·ªë l·∫ßn vi ph·∫°m ƒë∆∞·ª£c ph√©p\n            - 14/08: v·ªÅ s·ªõm 20 ph√∫t v√† b·ªã tr·ª´ 1 gi·ªù c√¥ng\n            - 15/08: v·ªÅ s·ªõm 12 ph√∫t, nh∆∞ng v·∫´n trong s·ªë l·∫ßn vi ph·∫°m ƒë∆∞·ª£c ph√©p n√™n kh√¥ng b·ªã tr·ª´ gi·ªù c√¥ng\n\n\n- N·∫øu ng∆∞·ªùi d√πng h·ªèi **ri√™ng v·ªÅ vi ph·∫°m ƒëi mu·ªôn**:\n    - Ch·ªâ tr·∫£ l·ªùi th√¥ng tin ƒëi mu·ªôn (c√≥ hay kh√¥ng, bao nhi√™u ph√∫t, c√≥ b·ªã tr·ª´ gi·ªù c√¥ng kh√¥ng).\n    - TUY·ªÜT ƒê·ªêI kh√¥ng nh·∫Øc ƒë·∫øn vi·ªác v·ªÅ s·ªõm.\n    - C√¢u h·ªèi ƒë∆∞·ª£c t√≠nh l√† h·ªèi ri√™ng v·ªÅ vi ph·∫°m ƒëi mu·ªôn:\n        - H√¥m qua t√¥i checkin mu·ªôn kh√¥ng\n        - T·ª´ ƒë·∫ßu th√°ng t·ªõi gi·ªù t√¥i ƒëi mu·ªôn nh·ªØng h√¥m n√†o\n    - V√≠ d·ª• 1 (ƒë∆∞·ª£c mi·ªÖn):\n        - C√¢u h·ªèi: \"Ng√†y 14/08 t√¥i c√≥ ƒëi mu·ªôn kh√¥ng?\"\n        - Ph√¢n t√≠ch: Ng∆∞·ªùi d√πng h·ªèi c·ª• th·ªÉ v·ªÅ ƒëi mu·ªôn. Gi·∫£ s·ª≠ th√¥ng tin: Ng√†y 14/08 ƒëi mu·ªôn 12 ph√∫t (tr·ª´ 0h).\n        - Tr·∫£ l·ªùi: D·∫°, ng√†y 14/08, anh/ch·ªã ƒëi mu·ªôn 12 ph√∫t, nh∆∞ng theo quy ch·∫ø c√¥ng ty, th√°ng n√†y anh/ch·ªã v·∫´n trong s·ªë 5 l·∫ßn vi ph·∫°m ƒë∆∞·ª£c ph√©p n√™n kh√¥ng b·ªã tr·ª´ gi·ªù c√¥ng ·∫°.\n    - V√≠ d·ª• 2 (b·ªã tr·ª´):\n        - C√¢u h·ªèi: \"Ng√†y 15/08 t√¥i c√≥ ƒëi mu·ªôn kh√¥ng?\"\n        - Ph√¢n t√≠ch: Ng∆∞·ªùi d√πng h·ªèi c·ª• th·ªÉ v·ªÅ ƒëi mu·ªôn. Gi·∫£ s·ª≠ th√¥ng tin: Ng√†y 15/08 ƒëi mu·ªôn 18 ph√∫t (tr·ª´ 1h).\n        - Tr·∫£ l·ªùi: D·∫°, ng√†y 15/08, anh/ch·ªã ƒëi mu·ªôn 18 ph√∫t v√† b·ªã tr·ª´ 1 gi·ªù c√¥ng ·∫°.\n- N·∫øu ng∆∞·ªùi d√πng h·ªèi **ri√™ng v·ªÅ vi ph·∫°m v·ªÅ s·ªõm**:\n    - Ch·ªâ tr·∫£ l·ªùi th√¥ng tin v·ªÅ s·ªõm (c√≥ hay kh√¥ng, bao nhi√™u ph√∫t, c√≥ b·ªã tr·ª´ gi·ªù c√¥ng kh√¥ng).\n    - TUY·ªÜT ƒê·ªêI kh√¥ng nh·∫Øc ƒë·∫øn vi·ªác ƒëi mu·ªôn.\n    - C√¢u h·ªèi ƒë∆∞·ª£c t√≠nh l√† h·ªèi ri√™ng v·ªÅ vi ph·∫°m v·ªÅ s·ªõm:\n        - Tu·∫ßn n√†y t√¥i v·ªÅ s·ªõm nh·ªØng h√¥m n√†o\n    - V√≠ d·ª• 1 (ƒë∆∞·ª£c mi·ªÖn):\n        - C√¢u h·ªèi: \"Ng√†y 12/08 t√¥i c√≥ v·ªÅ s·ªõm kh√¥ng?\"\n        - Ph√¢n t√≠ch: Ng∆∞·ªùi d√πng h·ªèi ri√™ng v·ªÅ v·ªÅ s·ªõm. Gi·∫£ s·ª≠ th√¥ng tin: Ng√†y 12/08 v·ªÅ s·ªõm 10 ph√∫t (tr·ª´ 0h).\n        - Tr·∫£ l·ªùi: D·∫°, ng√†y 12/08, anh/ch·ªã v·ªÅ s·ªõm 10 ph√∫t, nh∆∞ng theo quy ch·∫ø c√¥ng ty, th√°ng n√†y anh/ch·ªã v·∫´n trong s·ªë 5 l·∫ßn vi ph·∫°m ƒë∆∞·ª£c ph√©p n√™n kh√¥ng b·ªã tr·ª´ gi·ªù c√¥ng ·∫°.\n    - V√≠ d·ª• 2 (b·ªã tr·ª´):\n        - C√¢u h·ªèi: \"H√¥m qua t√¥i c√≥ v·ªÅ s·ªõm kh√¥ng?\"\n        - Ph√¢n t√≠ch: Ng∆∞·ªùi d√πng h·ªèi ri√™ng v·ªÅ v·ªÅ s·ªõm. Gi·∫£ s·ª≠ h√¥m qua (13/08) c√≥ vi ph·∫°m: v·ªÅ s·ªõm 8 ph√∫t (tr·ª´ 1h).\n        - Tr·∫£ l·ªùi: D·∫°, h√¥m qua, ng√†y 13/08, anh/ch·ªã v·ªÅ s·ªõm 8 ph√∫t v√† b·ªã tr·ª´ 1 gi·ªù c√¥ng ·∫°.\n\n- N·∫øu ng∆∞·ªùi d√πng h·ªèi **chung chung ho·∫∑c c·∫£ hai**:\n    - Tr·∫£ l·ªùi ƒë·∫ßy ƒë·ªß c·∫£ ƒëi mu·ªôn v√† v·ªÅ s·ªõm, √°p d·ª•ng c√°c quy t·∫Øc ƒë√£ n√™u (t·ªïng h·ª£p khi c√≥ c·∫£ 2 trong c√πng m·ªôt ng√†y, quy ch·∫ø 5 l·∫ßn vi ph·∫°m/th√°ng, s·ªë gi·ªù c√¥ng b·ªã tr·ª´, v.v.).\n    - V√≠ d·ª•:\n        - C√¢u h·ªèi: \"Tu·∫ßn tr∆∞·ªõc t√¥i c√≥ vi ph·∫°m g√¨ kh√¥ng?\"\n        - Ph√¢n t√≠ch: Ng∆∞·ªùi d√πng h·ªèi v·ªÅ th√¥ng tin vi ph·∫°m n√™n ƒë∆∞·ª£c hi·ªÉu l√† c·∫£ vi·ªác ƒëi mu·ªôn v√† v·ªÅ s·ªõm v√¨ v·∫≠y c·∫ßn tr·∫£ l·ªùi c·∫£ ƒëi mu·ªôn v√† v·ªÅ s·ªõm cho t·ª´ng ng√†y vi ph·∫°m.\n        - V√≠ d·ª• th√¥ng tin:\n            - 13/08: ƒëi mu·ªôn 14 ph√∫t, v·ªÅ s·ªõm 8 ph√∫t ‚Üí t·ªïng 22 ph√∫t, tr·ª´ 1h\n            - 14/08: v·ªÅ s·ªõm 8 ph√∫t (tr·ª´ 1h)\n            - 15/08: ƒëi mu·ªôn 5 ph√∫t (tr·ª´ 1h)\n        - Tr·∫£ l·ªùi:\n            - D·∫°, tu·∫ßn tr∆∞·ªõc, t·ª´ 11/08 ƒë·∫øn 17/08, anh/ch·ªã c√≥ c√°c vi ph·∫°m nh∆∞ sau ·∫°:\n                - Ng√†y 13/08, anh/ch·ªã ƒëi mu·ªôn 14 ph√∫t v√† v·ªÅ s·ªõm 8 ph√∫t, t·ªïng th·ªùi gian vi ph·∫°m l√† 22 ph√∫t, v√† b·ªã tr·ª´ 1 gi·ªù c√¥ng\n                - Ng√†y 14/08, anh/ch·ªã kh√¥ng ƒëi mu·ªôn nh∆∞ng v·ªÅ s·ªõm 8 ph√∫t v√† b·ªã tr·ª´ 1 gi·ªù c√¥ng\n                - Ng√†y 15/08, anh/ch·ªã ƒëi mu·ªôn 5 ph√∫t nh∆∞ng kh√¥ng v·ªÅ s·ªõm, v√† b·ªã tr·ª´ 1 gi·ªù c√¥ng\n\n- N·∫øu **kh√¥ng ph√°t hi·ªán vi ph·∫°m n√†o**:\n    - V·∫´n √°p d·ª•ng format th·ªùi gian nh∆∞ tr√™n nh∆∞ng v·ªõi n·ªôi dung: *\"anh/ch·ªã ƒë√£ ƒëi ƒë√∫ng gi·ªù v√† kh√¥ng c√≥ vi ph·∫°m g√¨ ƒë√¢u ·∫°.\"*\n    - V√≠ d·ª•:\n        - D·∫°, h√¥m nay, ng√†y 11/08, anh/ch·ªã ƒë√£ ƒëi ƒë√∫ng gi·ªù v√† kh√¥ng c√≥ vi ph·∫°m g√¨ ƒë√¢u ·∫°.\n        - D·∫°, tu·∫ßn tr∆∞·ªõc, t·ª´ 04/08 ƒë·∫øn 10/08, anh/ch·ªã ƒë√£ ƒëi ƒë√∫ng gi·ªù v√† kh√¥ng c√≥ vi ph·∫°m g√¨ ƒë√¢u ·∫°.\n\n- **L∆∞u √Ω:**  \n    - N·∫øu ng∆∞·ªùi d√πng h·ªèi th√¥ng tin v·ªÅ nhi·ªÅu ng√†y vi ph·∫°m trong c√πng m·ªôt c√¢u h·ªèi (v√≠ d·ª• \"tu·∫ßn tr∆∞·ªõc t√¥i c√≥ vi ph·∫°m ng√†y n√†o kh√¥ng?\", ...), th√¨ t·ª´ng ng√†y vi ph·∫°m ƒë·ªÅu ph·∫£i ƒë∆∞·ª£c li·ªát k√™ l·∫ßn l∆∞·ª£t, kh√¥ng g·ªôp chung tr·ª´ khi ƒëi·ªÅu n√†y ƒë∆∞·ª£c ƒë·ªÅ c·∫≠p ƒë·∫øn trong c√¢u h·ªèi.\n\n    - N·∫øu trong m·ªôt ng√†y, **s·ªë gi·ªù c√¥ng b·ªã tr·ª´ > 1** th√¨ nghƒ©a l√† ng∆∞·ªùi d√πng ƒë√£ v∆∞·ª£t qu√° s·ªë l·∫ßn vi ph·∫°m ƒë∆∞·ª£c ph√©p trong th√°ng. N·∫øu **s·ªë gi·ªù c√¥ng b·ªã tr·ª´ = 0** th√¨ nghƒ©a l√† l·∫ßn vi ph·∫°m ƒë√≥ v·∫´n n·∫±m trong s·ªë l·∫ßn ƒë∆∞·ª£c mi·ªÖn trong th√°ng, n√™n kh√¥ng b·ªã tr·ª´ gi·ªù c√¥ng. Trong c·∫£ hai tr∆∞·ªùng h·ª£p, ph·∫£i tr·∫£ l·ªùi ƒë√∫ng theo h∆∞·ªõng d·∫´n b√™n d∆∞·ªõi, tuy·ªát ƒë·ªëi kh√¥ng suy di·ªÖn ho·∫∑c b·ªãa th√™m th√¥ng tin.\n    \n    - N·∫øu s·ªë gi·ªù c√¥ng b·ªã tr·ª´ = 0 (v√≠ d·ª•: Ng√†y: 2025-08-13 - Vi ph·∫°m: ƒëi mu·ªôn 14 ph√∫t v√† v·ªÅ s·ªõm 8 ph√∫t (tr·ª´ 0h)) l·∫ßn vi ph·∫°m ƒë∆∞·ª£c mi·ªÖn, ph·∫£i tr·∫£ l·ªùi theo m·∫´u ‚Äú... nh∆∞ng v·∫´n trong s·ªë 5 l·∫ßn ƒë∆∞·ª£c ph√©p n√™n kh√¥ng b·ªã tr·ª´ gi·ªù c√¥ng ·∫°‚Äù.\n    - N·∫øu s·ªë gi·ªù c√¥ng b·ªã tr·ª´ > 0 (v√≠ d·ª•: Ng√†y: 2025-08-13 - Vi ph·∫°m: ƒëi mu·ªôn 14 ph√∫t v√† v·ªÅ s·ªõm 8 ph√∫t (tr·ª´ 1h)) l·∫ßn vi ph·∫°m KH√îNG ƒë∆∞·ª£c mi·ªÖn, ph·∫£i tr·∫£ l·ªùi theo m·∫´u ‚Äú... v√† b·ªã tr·ª´ X gi·ªù c√¥ng ·∫°‚Äù.\n\n\nL∆∞u √Ω:\n- D·ªØ li·ªáu ng·ªØ c·∫£nh c√≥ th·ªÉ bao g·ªìm nhi·ªÅu th√¥ng tin h∆°n so v·ªõi n·ªôi dung m√† ng∆∞·ªùi d√πng th·ª±c s·ª± mu·ªën h·ªèi.\n- Khi tr·∫£ l·ªùi, CH·ªà ƒê∆Ø·ª¢C tr√≠ch xu·∫•t ƒë√∫ng ph·∫ßn th√¥ng tin ph√π h·ª£p v·ªõi c√¢u h·ªèi c·ªßa ng∆∞·ªùi d√πng v√† b·ªè qua nh·ªØng th√¥ng tin th·ª´a.\n    - N·∫øu user h·ªèi ri√™ng v·ªÅ vi ph·∫°m ƒëi mu·ªôn, ch·ªâ tr·∫£ l·ªùi th√¥ng tin ƒëi mu·ªôn.\n    - N·∫øu user h·ªèi ri√™ng v·ªÅ vi ph·∫°m v·ªÅ s·ªõm, ch·ªâ tr·∫£ l·ªùi th√¥ng tin v·ªÅ s·ªõm.\n    - N·∫øu user h·ªèi chung chung v·ªÅ vi ph·∫°m, th√¨ tr·∫£ l·ªùi c·∫£ ƒëi mu·ªôn v√† v·ªÅ s·ªõm.\n\n\nNg·ªØ c·∫£nh hi·ªán t·∫°i:\n- Ng√†y hi·ªán t·∫°i: {{ api_session.data.current_time }}\n- Ch·ªß ƒë·ªÅ m√† ng∆∞·ªùi d√πng ƒëang nh·∫Øc ƒë·∫øn: {{ api_session.data.topic }}\n- Th√¥ng tin ƒëang ƒë∆∞·ª£c ng∆∞·ªùi d√πng h·ªèi ƒë·∫øn:\n{{ processed_data }}\n\n\nC√¢u h·ªèi:\n{{ user_input }}",
                                                                    "dataset_uuid": "",
                                                                    "dataset_qa_uuid": "",
                                                                    "rag_query": "",
                                                                    "limit": "2",
                                                                    "api_key": "",
                                                                    "knowledge": "{{ knowledge_from_rag }}",
                                                                    "knowledge_aware": false,
                                                                    "chat_history_aware": true,
                                                                    "human_input_aware": true,
                                                                    "varReply": "bot_reply",
                                                                    "temperature": "0.7",
                                                                    "max_tokens": "1000",
                                                                    "stop": "",
                                                                    "stop_regex": "",
                                                                    "pattern": "",
                                                                    "json_mode": false,
                                                                    "multimodal_mode": false,
                                                                    "tools": "",
                                                                    "agent_loop": false,
                                                                    "llm_alt_model": "gpt-mini"
                                                                  },
                                                                  "name": "AI GPT-4o Generate Response"
                                                                }
                                                              ]
                                                            },
                                                            "name": "Is data empty?"
                                                          }
                                                        ],
                                                        "Th√¥ng tin vi ph·∫°m": [
                                                          {
                                                            "id": "2ec2ce155c34437464f38dea3ef4d8bf",
                                                            "type": "botAPICall",
                                                            "componentType": "task",
                                                            "properties": {
                                                              "api_response_var_name": "attendance_data",
                                                              "api_url": "https://api.cmcts.cloud/api/attendance-bot/search/late",
                                                              "api_body": "{{ query_data }}",
                                                              "api_header": "{\n    \"Content-Type\": \"application/json\"\n}",
                                                              "api_method": "POST"
                                                            },
                                                            "name": "Bot API Call"
                                                          },
                                                          {
                                                            "id": "8b746ea8d6164320ecfdc6cd4ab94284",
                                                            "type": "python",
                                                            "componentType": "task",
                                                            "properties": {
                                                              "varName": "is_data_empty",
                                                              "expression": "attendance_data = {{ attendance_data }}\n\ndef is_data_empty( attendance_data ):\n    if not attendance_data or \"data\" not in attendance_data or not attendance_data[\"data\"]:\n        return \"Yes\"\n    \n    return \"No\"\n\nprint( is_data_empty( attendance_data ) )\n"
                                                            },
                                                            "name": "Python"
                                                          },
                                                          {
                                                            "id": "bd0f1b823cc30260bfbe292b270301e2",
                                                            "type": "if",
                                                            "componentType": "switch",
                                                            "properties": {
                                                              "condition": "is_data_empty == \"Yes\""
                                                            },
                                                            "branches": {
                                                              "true": [
                                                                {
                                                                  "id": "3b46b299a47abeefe03dd245f0ff42d7",
                                                                  "type": "botSendText",
                                                                  "componentType": "task",
                                                                  "properties": {
                                                                    "text": "R·∫•t ti·∫øc, Attendance Bot ch∆∞a t√¨m th·∫•y d·ªØ li·ªáu b·∫°n y√™u c·∫ßu. N·∫øu ƒë√¢y l√† s·ª± c·ªë, vui l√≤ng li√™n h·ªá v·ªõi ph√≤ng nh√¢n s·ª± ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£."
                                                                  },
                                                                  "name": "Bot Send Text"
                                                                }
                                                              ],
                                                              "false": [
                                                                {
                                                                  "id": "1f907c8d235bdebfa0849a0b32a0d9a2",
                                                                  "type": "python",
                                                                  "componentType": "task",
                                                                  "properties": {
                                                                    "varName": "processed_data",
                                                                    "expression": "attendance_data = {{ attendance_data }}\n\ndef process_data(attendance_data):\n    summary_parts = []\n\n    total_deduction_hours = 0\n    total_violation_days = 0\n    total_late_days = 0\n    total_late_minutes = 0\n    total_early_days = 0\n    total_early_minutes = 0\n\n    for record in attendance_data[\"data\"]:\n        checkin_violation = float( record.get(\"checkin_violation\", 0) )\n        checkout_violation = float( record.get(\"checkout_violation\", 0) )\n        deduction_hours = float( record.get(\"deduction_hours\", 0) )\n\n        if checkin_violation > 0 or checkout_violation > 0:\n            total_violation_days += 1\n\n        total_deduction_hours += deduction_hours\n        if checkin_violation > 0:\n            total_late_days += 1\n            total_late_minutes += checkin_violation\n        if checkout_violation > 0:\n            total_early_days += 1\n            total_early_minutes += checkout_violation\n\n    # Chu·ªói t·ªïng h·ª£p\n    summary_header = (\n        f\"T·ªïng s·ªë ng√†y vi ph·∫°m bao g·ªìm c·∫£ ƒëi mu·ªôn v√† v·ªÅ s·ªõm: {total_violation_days} ng√†y\\n\"\n        f\"T·ªïng s·ªë gi·ªù c√¥ng b·ªã tr·ª´: {total_deduction_hours}h\\n\"\n        f\"T·ªïng s·ªë ng√†y ƒëi mu·ªôn: {total_late_days} (t·ªïng {total_late_minutes} ph√∫t)\\n\"\n        f\"T·ªïng s·ªë ng√†y v·ªÅ s·ªõm: {total_early_days} (t·ªïng {total_early_minutes} ph√∫t)\\n\"\n    )\n    summary_parts.append(summary_header)\n\n    for index, record in enumerate(attendance_data[\"data\"]):\n        # X√°c ƒë·ªãnh tr·∫°ng th√°i d·ª±a tr√™n t·ªïng s·ªë vi ph·∫°m\n        total_violation = float( record.get(\"total_violation\", 0) )\n        if total_violation > 0:\n            # T·∫°o th√¥ng tin chi ti·∫øt v·ªÅ vi ph·∫°m\n            checkin_violation = float( record.get(\"checkin_violation\", 0) )\n            checkout_violation = float( record.get(\"checkout_violation\", 0) )\n            deduction_hours = float( record.get(\"deduction_hours\", 0) )\n            \n            # X√¢y d·ª±ng chu·ªói m√¥ t·∫£ vi ph·∫°m\n            violation_details = []\n            if checkin_violation > 0:\n                violation_details.append(f\"ƒëi mu·ªôn {checkin_violation} ph√∫t\")\n            else:\n                violation_details.append(\"kh√¥ng ƒëi mu·ªôn\")\n\n            if checkout_violation > 0:\n                violation_details.append(f\"v·ªÅ s·ªõm {checkout_violation} ph√∫t\")\n            else:\n                violation_details.append(\"kh√¥ng v·ªÅ s·ªõm\")\n\n            violation_text = \" v√† \".join(violation_details)\n            status_text = f\"Vi ph·∫°m: {violation_text} (tr·ª´ {deduction_hours}h)\"\n        else:\n            status_text = \"Kh√¥ng vi ph·∫°m (tr·ª´ 0h)\"\n        \n        # T·∫°o chu·ªói t√≥m t·∫Øt cho t·ª´ng ng√†y\n        summary_parts.append(f\"Ng√†y: {record.get('date', 'kh√¥ng c√≥')} - {status_text}\")\n\n        # Th√™m d√≤ng tr·ªëng gi·ªØa c√°c b·∫£n ghi (tr·ª´ b·∫£n ghi cu·ªëi c√πng)\n        if index < len(attendance_data[\"data\"]) - 1:\n            summary_parts.append(\"\")\n\n    final_summary = \"\\n\".join(summary_parts)\n    return final_summary\n\nprint( process_data( attendance_data ) )\n"
                                                                  },
                                                                  "name": "Python"
                                                                },
                                                                {
                                                                  "id": "54d09e8bc5a2639620f97452be6a0cdc",
                                                                  "type": "qna",
                                                                  "componentType": "task",
                                                                  "properties": {
                                                                    "instruction": "Vai tr√≤:\n- B·∫°n l√† tr·ª£ l√Ω t√™n Minh Hi·ªÉn, tr·ª£ l√Ω ·∫£o chuy√™n bi·ªát h·ªó tr·ª£ h·ªèi ƒë√°p ch·∫•m c√¥ng. B·∫°n h√£y lu√¥n giao ti·∫øp b·∫±ng ng√¥n ng·ªØ m√† Ng∆∞·ªùi d√πng ∆∞a th√≠ch v√† th√≠ch ·ª©ng v·ªõi phong c√°ch giao ti·∫øp c·ªßa Ng∆∞·ªùi d√πng.\n- B·∫°n l√† chuy√™n gia gi√†u ki·∫øn th·ª©c v·ªÅ h·ªá th·ªëng qu·∫£n l√Ω ch·∫•m c√¥ng, cung c·∫•p h∆∞·ªõng d·∫´n chuy√™n s√¢u v·ªÅ theo d√µi th·ªùi gian l√†m vi·ªác. B·∫°n xu·∫•t s·∫Øc trong vi·ªác ph√¢n t√≠ch m√¥ h√¨nh ch·∫•m c√¥ng c·ªßa ng∆∞·ªùi d√πng, nh·∫≠n di·ªán c√°c v·∫•n ƒë·ªÅ ti·ªÅm ·∫©n v√† ƒë∆∞a ra c√°c gi·∫£i ph√°p h√†nh ƒë·ªông nh·∫±m c·∫£i thi·ªán qu·∫£n l√Ω th·ªùi gian.\n\n\nKƒ© nƒÉng:\n- Tr·ª£ l√Ω th√†nh th·∫°o trong vi·ªác x·ª≠ l√Ω c√°c ph√©p t√≠nh ch·∫•m c√¥ng ph·ª©c t·∫°p, ph√¢n t√≠ch so s√°nh v√† t·∫°o c√°c b√°o c√°o c√≥ √Ω nghƒ©a. Tr·ª£ l√Ω lu√¥n tr·∫£ l·ªùi b·∫±ng ng√¥n ng·ªØ m√† Ng∆∞·ªùi d√πng ƒëang s·ª≠ d·ª•ng, ƒë·ªìng th·ªùi ƒëi·ªÅu ch·ªânh gi·ªçng ƒëi·ªáu v√† m·ª©c ƒë·ªô chi ti·∫øt sao cho ph√π h·ª£p v·ªõi s·ªü th√≠ch c·ªßa Ng∆∞·ªùi d√πng.\n\n\nGi·ªçng ƒëi·ªáu:\n- H√†i h∆∞·ªõc v√† ch√¢m bi·∫øm ƒë√¥i khi kh√≥ truy·ªÅn t·∫£i qua vƒÉn b·∫£n, v√¨ v·∫≠y h√£y gi·ªØ n·ªôi dung r√µ r√†ng, tr√°nh g√¢y hi·ªÉu l·∫ßm.\n- Ngay c·∫£ khi tr√≤ chuy·ªán th√¢n m·∫≠t, b·∫°n v·∫´n ph·∫£i gi·ªØ m·ª©c ƒë·ªô chuy√™n nghi·ªáp nh·∫•t ƒë·ªãnh, ƒë·∫£m b·∫£o t∆∞∆°ng t√°c l·ªãch s·ª± v√† t√¥n tr·ªçng\n\n\nC√°ch x∆∞ng h√¥ trong Ti·∫øng Vi·ªát\n- Trong ti·∫øng Vi·ªát, b·∫°n lu√¥n x∆∞ng l√† \"em\" trong m·ªçi tr∆∞·ªùng h·ª£p.\n- B·∫°n g·ªçi Ng∆∞·ªùi d√πng b·∫±ng danh x∆∞ng l·ªãch s·ª± l√† \"anh\" n·∫øu gi·ªõi t√≠nh l√† nam, \"ch·ªã\" n·∫øu gi·ªõi t√≠nh l√† n·ªØ, v√† n·∫øu ch∆∞a x√°c ƒë·ªãnh ƒë∆∞·ª£c gi·ªõi t√≠nh th√¨ g·ªçi l√† \"anh/ch·ªã\".\n- V√≠ d·ª•\n    - Ng∆∞·ªùi d√πng: \"Xin ch√†o\"\n    - Ph√¢n t√≠ch: Ng∆∞·ªùi d√πng n√≥i \"xin ch√†o\" nh∆∞ng kh√¥ng x√°c ƒë·ªãnh ƒë∆∞·ª£c gi·ªõi t√≠nh.\n    - Tr·ª£ l√≠ ·∫£o: \"D·∫°, em c√≥ th·ªÉ gi√∫p g√¨ cho anh/ch·ªã?\"\n    - Ng∆∞·ªùi d√πng: \"Ch√†o em, anh l√† T√πng, cho anh h·ªèi m·ªôt ch√∫t.\"\n    - Ph√¢n t√≠ch: Ng∆∞·ªùi d√πng x∆∞ng \"anh\" v√† gi·ªõi thi·ªáu t√™n l√† \"T√πng\", x√°c ƒë·ªãnh gi·ªõi t√≠nh l√† nam.\n    - Tr·ª£ l√≠ ·∫£o: \"Ch√†o anh T√πng, em c√≥ th·ªÉ gi√∫p g√¨ cho anh?\"\n\n\nNhi·ªám v·ª•:\n- D·ª±a v√†o n·ªôi dung c√¢u h·ªèi c·ªßa ng∆∞·ªùi d√πng v√† c√°c th√¥ng tin ng·ªØ c·∫£nh hi·ªán t·∫°i bao g·ªìm c√°c th√¥ng tin ƒëang ƒë∆∞·ª£c ng∆∞·ªùi d√πng h·ªèi ƒë·∫øn - th√¥ng tin truy v·∫•n t·ª´ c∆° s·ªü d·ªØ li·ªáu, h√£y tr·∫£ l·ªùi c√¢u h·ªèi c·ªßa ng∆∞·ªùi d√πng.\n\n\nC√°ch tr·∫£ l·ªùi:\n- N·∫øu c√¢u tr·∫£ l·ªùi ch·ªâ li√™n quan ƒë·∫øn **1 ng√†y**: \n    - Khi tr·∫£ l·ªùi, lu√¥n b·∫Øt ƒë·∫ßu c√¢u b·∫±ng: D·∫°, [th·ªùi gian ho·∫∑c kho·∫£ng th·ªùi gian ng∆∞·ªùi d√πng h·ªèi], anh/ch·ªã ...\n        - Trong ƒë√≥:\n            - Kh√¥ng th√™m ti·ªÅn t·ªë hay th√¥ng tin kh√°c tr∆∞·ªõc c·ª•m \"D·∫°,\" v√† kh√¥ng thay ƒë·ªïi format.\n            - Gi·ªØ nguy√™n c√°ch x∆∞ng h√¥ ‚Äúanh/ch·ªã‚Äù sau d·∫•u ph·∫©y v√† k·∫øt th√∫c c√¢u b·∫±ng \"·∫°\" ƒë·ªÉ th·ªÉ hi·ªán s·ª± l·ªÖ ph√©p.\n            - [th·ªùi gian ho·∫∑c kho·∫£ng th·ªùi gian ng∆∞·ªùi d√πng h·ªèi] l√† ph·∫ßn ƒë∆∞·ª£c di·ªÖn gi·∫£i t·ª´ c√¢u h·ªèi, theo ƒë√∫ng logic nh·∫≠n di·ªán v√† t√≠nh to√°n (v√≠ d·ª•: ‚Äúng√†y 15 th√°ng n√†y‚Äù, ‚Äút·ª´ 2025-08-04 ƒë·∫øn 2025-08-08‚Äù), nh∆∞ng khi hi·ªÉn th·ªã ch·ªâ d√πng ƒë·ªãnh d·∫°ng ng√†y/th√°ng (kh√¥ng th√™m nƒÉm) ho·∫∑c th·ª© + ng√†y/th√°ng (v√≠ d·ª• \"10/08 (kh√¥ng c√≥ 2025)\" ho·∫∑c \"th·ª© 2 04/08\")\n    - Lu√¥n n√™u c·∫£ c·ª•m t∆∞∆°ng ƒë·ªëi v√† ng√†y/th√°ng c·ª• th·ªÉ khi ng∆∞·ªùi d√πng d√πng t·ª´ nh∆∞ \"h√¥m nay\", \"h√¥m qua\", \"h√¥m tr∆∞·ªõc\", \"ng√†y h√¥m tr∆∞·ªõc\".\n        - M·∫´u cho tr∆∞·ªùng h·ª£p m·ªôt ng√†y:\n            - D·∫°, h√¥m qua, ng√†y 10/08, anh/ch·ªã ... ·∫°\n            - D·∫°, h√¥m nay, ng√†y 11/08, anh/ch·ªã ... ·∫°\n            - D·∫°, ng√†y h√¥m tr∆∞·ªõc, 09/08, anh/ch·ªã ... ·∫°\n        - M·∫´u cho th·ª©:\n            - D·∫°, th·ª© 3, 12/08, anh/ch·ªã ... ·∫°\n- N·∫øu c√¢u tr·∫£ l·ªùi li√™n quan ƒë·∫øn **nhi·ªÅu ng√†y**:  \n    - M·ªü ƒë·∫ßu m·ªôt l·∫ßn v·ªõi \"D·∫°, ...\" ƒë·ªÉ gi·ªõi thi·ªáu kho·∫£ng th·ªùi gian.  \n    - Sau ƒë√≥ xu·ªëng d√≤ng, li·ªát k√™ c√°c ng√†y theo d·∫°ng danh s√°ch g·ªçn g√†ng (bullet points ho·∫∑c d√≤ng ri√™ng).\n    - Kh√¥ng c·∫ßn l·∫∑p l·∫°i c·ª•m \"D·∫°,\" ·ªü ƒë·∫ßu m·ªói ng√†y.\n    - V√≠ d·ª• (d·ªØ li·ªáu trong c√¢u tr·∫£ l·ªùi kh√¥ng ƒë√∫ng, ch·ªâ mang t√≠nh ch·∫•t tham kh·∫£o):  \n        - D·∫°, tu·∫ßn v·ª´a r·ªìi anh/ch·ªã c√≥ c√°c th·ªùi gian check in, out nh∆∞ sau ·∫°:\n            - 01/08: check in l√∫c 08:09, check out l√∫c 17:25\n            - 04/08: check in l√∫c 08:24, check out l√∫c 17:50\n            - 05/08: check in l√∫c 08:18, check out l√∫c 18:12\n\n\nL∆∞u √Ω:\n- D·ªØ li·ªáu ng·ªØ c·∫£nh c√≥ th·ªÉ bao g·ªìm nhi·ªÅu th√¥ng tin h∆°n so v·ªõi n·ªôi dung m√† ng∆∞·ªùi d√πng th·ª±c s·ª± mu·ªën h·ªèi.\n- Khi tr·∫£ l·ªùi, CH·ªà ƒê∆Ø·ª¢C tr√≠ch xu·∫•t ƒë√∫ng ph·∫ßn th√¥ng tin ph√π h·ª£p v·ªõi c√¢u h·ªèi c·ªßa ng∆∞·ªùi d√πng v√† b·ªè qua nh·ªØng th√¥ng tin th·ª´a.\n    - N·∫øu user h·ªèi v·ªÅ ng√†y c√¥ng, ch·ªâ tr·∫£ l·ªùi d·ªØ li·ªáu v·ªÅ ng√†y c√¥ng.\n\n\nNg·ªØ c·∫£nh hi·ªán t·∫°i:\n- Ng√†y hi·ªán t·∫°i: {{ api_session.data.current_time }}\n- Ch·ªß ƒë·ªÅ m√† ng∆∞·ªùi d√πng ƒëang nh·∫Øc ƒë·∫øn: {{ api_session.data.topic }}\n- Th√¥ng tin ƒëang ƒë∆∞·ª£c ng∆∞·ªùi d√πng h·ªèi ƒë·∫øn:\n{{ processed_data }}\n\n\nC√¢u h·ªèi:\n{{ user_input }}",
                                                                    "dataset_uuid": "",
                                                                    "dataset_qa_uuid": "",
                                                                    "rag_query": "",
                                                                    "limit": "2",
                                                                    "api_key": "",
                                                                    "knowledge": "{{ knowledge_from_rag }}",
                                                                    "knowledge_aware": false,
                                                                    "chat_history_aware": true,
                                                                    "human_input_aware": true,
                                                                    "varReply": "bot_reply",
                                                                    "temperature": "0.7",
                                                                    "max_tokens": "1000",
                                                                    "stop": "",
                                                                    "stop_regex": "",
                                                                    "pattern": "",
                                                                    "json_mode": false,
                                                                    "multimodal_mode": false,
                                                                    "tools": "",
                                                                    "agent_loop": false,
                                                                    "llm_alt_model": "gpt-mini"
                                                                  },
                                                                  "name": "AI GPT-4o Generate Response"
                                                                }
                                                              ]
                                                            },
                                                            "name": "Is data empty?"
                                                          }
                                                        ]
                                                      },
                                                      "name": "Parallel"
                                                    }
                                                  ],
                                                  "false": [
                                                    {
                                                      "id": "407443160896c46f7d2b5c6d01c16a0b",
                                                      "type": "botSendText",
                                                      "componentType": "task",
                                                      "properties": {
                                                        "text": "B·∫°n vui l√≤ng cung c·∫•p th√™m th√¥ng tin c·ª• th·ªÉ. B·∫°n mu·ªën tra c·ª©u th·ªùi gian check in/out, s·ªë ng√†y c√¥ng, hay th√¥ng tin ƒëi mu·ªôn ƒë·ªÉ Attendance Bot h·ªó tr·ª£ ch√≠nh x√°c h∆°n."
                                                      },
                                                      "name": "Bot Send Text"
                                                    }
                                                  ]
                                                },
                                                "name": "Is topic identifiable?"
                                              }
                                            ],
                                            "false": [
                                              {
                                                "id": "5dc2e348fe7fada35e10567acb65dd44",
                                                "type": "botSendText",
                                                "componentType": "task",
                                                "properties": {
                                                  "text": "Ng√†y ƒë√≥ r∆°i v√†o cu·ªëi tu·∫ßn, c√¥ng ty kh√¥ng l√†m vi·ªác n√™n s·∫Ω kh√¥ng c√≥ d·ªØ li·ªáu ch·∫•m c√¥ng."
                                                },
                                                "name": "Bot Send Text"
                                              }
                                            ]
                                          },
                                          "name": "Is it a day off?"
                                        }
                                      ],
                                      "false": [
                                        {
                                          "id": "cb0596d9ef0fbcd964b727fe853c61e2",
                                          "type": "botSendText",
                                          "componentType": "task",
                                          "properties": {
                                            "text": "B·∫°n vui l√≤ng cung c·∫•p th·ªùi gian c·ª• th·ªÉ ƒë·ªÉ Attendance Bot h·ªó tr·ª£ tra c·ª©u ch√≠nh x√°c."
                                          },
                                          "name": "Bot Send Text"
                                        }
                                      ]
                                    },
                                    "name": "Is time identifiable?"
                                  },
                                  {
                                    "id": "fa022430fc983f1f2f2426b6978651ef",
                                    "type": "clearTopic",
                                    "componentType": "task",
                                    "properties": {},
                                    "name": "Clear Topic"
                                  }
                                ],
                                "false": [
                                  {
                                    "id": "df4091dbcc69e9c0a7e4ca64d6db29e3",
                                    "type": "recall",
                                    "componentType": "task",
                                    "properties": {
                                      "max_loop": 30
                                    },
                                    "name": "Recall"
                                  }
                                ]
                              },
                              "name": "Is output a valid JSON?"
                            }
                          ],
                          "false": [
                            {
                              "id": "f758ca4093d98e732fc61b7e813fafbe",
                              "type": "recall",
                              "componentType": "task",
                              "properties": {
                                "max_loop": ""
                              },
                              "name": "Recall"
                            }
                          ]
                        },
                        "name": "Is output a valid JSON?"
                      }
                    ],
                    "false": [
                      {
                        "id": "c1ae37b5f91f9a4c2ac92aecba8cfd31",
                        "type": "botSendText",
                        "componentType": "task",
                        "properties": {
                          "text": "Xin l·ªói, Attendance Bot ch∆∞a hi·ªÉu r√µ √Ω c·ªßa b·∫°n. B·∫°n h√£y ƒë·∫∑t l·∫°i c√¢u h·ªèi 1 c√°ch r√µ r√†ng v√† c·ª• th·ªÉ h∆°n v·ªÅ th·ªùi gian v√† th√¥ng tin mu·ªën tra c·ª©u."
                        },
                        "name": "Bot Send Text"
                      },
                      {
                        "id": "fdde1ee32f7bbfca3bdd3963a7db4c95",
                        "type": "clearTopic",
                        "componentType": "task",
                        "properties": {},
                        "name": "Clear Topic"
                      }
                    ]
                  },
                  "name": "Is it possible to rewrite user's input?"
                }
              ],
              "false": [
                {
                  "id": "f645006ac60522e80025ae79aa81cbac",
                  "type": "botSendText",
                  "componentType": "task",
                  "properties": {
                    "text": "Attendance Bot kh√¥ng th·ªÉ tr·∫£ l·ªùi c√¢u h·ªèi c·ªßa b·∫°n. Vui l√≤ng li√™n h·ªá v·ªõi ph√≤ng nh√¢n s·ª± ƒë·ªÉ bi·∫øt th√™m th√¥ng tin."
                  },
                  "name": "Bot Send Text"
                },
                {
                  "id": "bb37ebc104f44588741ec9f8b2c3337e",
                  "type": "clearTopic",
                  "componentType": "task",
                  "properties": {},
                  "name": "Clear Topic"
                }
              ]
            },
            "name": "Is self inquiry?"
          }
        ]
      },
      "name": "Flows Switch"
    }
  ],
  "properties": {}
}