[project]
name = "src"
version = "0.1.0"
description = ""
requires-python = ">=3.10,<4.0"
dependencies = [
    "requests==2.32.4",
    "python-dotenv==1.1.0",

    # Fastapi
    "fastapi==0.115.12",
    "fastapi-cli==0.0.7",

    # Fastapi's dependencies
    "email_validator==2.2.0",
    "httptools==0.6.4",
    "httpx==0.28.1",
    "Jinja2==3.1.6",
    "python-multipart==0.0.20",
    "PyYAML==6.0.2",
    "uvloop==0.21.0",
    "watchfiles==1.0.5",
    "websockets==15.0.1",

    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",

    # Database
    "psycopg[binary]<4.0.0,>=3.1.13",
    "sqlmodel<1.0.0,>=0.0.21",
    "alembic<2.0.0,>=1.12.1",

    # Langchain
    "numpy==2.2.6",

    "langchain==0.3.25",
    "langchain-google-genai==2.1.5",

    "langchain-ollama==0.3.3",

]

[tool.uv]
dev-dependencies = [
    "pipdeptree==2.26.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/main"]

[tool.mypy]
strict = true
exclude = ["venv", ".venv"]

[tool.ruff]
target-version = "py310"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
