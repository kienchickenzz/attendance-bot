services:

    db:
        image: postgres:15-alpine
        container_name: postgres
        restart: no
        networks:
        - bot-network
        ports:
        - "5432:5432"
        volumes:
        - ./volumes/postgres:/var/lib/postgresql/data
        env_file:
        - .env
        environment:
        - POSTGRES_DB=${DB_DATABASE:-attendance}
        - POSTGRES_USER=${DB_USERNAME:-postgres}
        - POSTGRES_PASSWORD=${DB_PASSWORD:-Pa55w.rd}
        command: >
            postgres -c 'max_connections=${POSTGRES_MAX_CONNECTIONS:-100}'
                    -c 'shared_buffers=${POSTGRES_SHARED_BUFFERS:-128MB}'
                    -c 'work_mem=${POSTGRES_WORK_MEM:-4MB}'
                    -c 'maintenance_work_mem=${POSTGRES_MAINTENANCE_WORK_MEM:-64MB}'
                    -c 'effective_cache_size=${POSTGRES_EFFECTIVE_CACHE_SIZE:-4096MB}'
        healthcheck:
            test: [ 'CMD', 'pg_isready' ]
            interval: 1s
            timeout: 3s
            retries: 60

    redis:
        image: redis:6-alpine
        container_name: redis
        restart: no
        networks:
        - bot-network
        ports:
        - "6379:6379"
        volumes:
        - ./volumes/redis:/data
        env_file:
        - .env
        environment:
            REDISCLI_AUTH: ${REDIS_PASSWORD:-Pa55w.rd}
        # Set the redis password when startup redis server.
        command: redis-server --requirepass ${REDIS_PASSWORD:-Pa55w.rd}
        healthcheck:
            test: [ 'CMD', 'redis-cli', 'ping' ]

    bot:
        build:
            context: ../packages/bot
            dockerfile: Dockerfile
        container_name: bot
        restart: no
        networks:
        - bot-network
        ports:
        - "3978:3978"
        env_file:
        - .env
        extra_hosts:
        - "host.docker.internal:host-gateway" 

networks:
    bot-network:
        driver: bridge
